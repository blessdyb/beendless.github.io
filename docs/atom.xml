<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Beendless ~ 快节奏,慢生活,无止境</title>
  
  <subtitle>Move Fast, Live Happily, With No End</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.beendless.com/"/>
  <updated>2018-12-19T06:13:36.098Z</updated>
  <id>http://blog.beendless.com/</id>
  
  <author>
    <name>Yabo Du &amp; Yanrong Chen</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>JavaScript 机器学习之分类与聚合算法</title>
    <link href="http://blog.beendless.com/2018/12/18/JavaScript-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%88%86%E7%B1%BB%E4%B8%8E%E8%81%9A%E5%90%88%E7%AE%97%E6%B3%95/"/>
    <id>http://blog.beendless.com/2018/12/18/JavaScript-机器学习之分类与聚合算法/</id>
    <published>2018-12-19T06:11:32.000Z</published>
    <updated>2018-12-19T06:13:36.098Z</updated>
    
    <content type="html"><![CDATA[<p>聚类是接触无监督式学习时常见的一个问题。通常在你想将一个大的数据集重新编排组织成小的群组，或者是将其按逻辑相似性分解成小的群组时我们会考虑聚类。例如，你可以尝试将人口普查数据中的家庭收入分成三个群组：低收入，中等收入及高收入。如果你将家庭收的数据集做为指定的一种聚类算法的输入，你将期望得到三个数据聚点 及其对应的前述三个收入分组的平均值做为结果。即使是这种家庭收入数据的一维聚类问题，你也可能很难通过手动解决——难点在于无法快速地确定两个分组之间的边界值。你可能可以参考政府部门所定义的收入分组的标准，但无法确定这类定义的标准是几何均衡的; 这类的标准可能是被政策制定者所发明出来的，因此它可能无法精确地表达数据之间的正真关系。</p><p>一个聚类是一组逻辑上存在某种相似性的数据点的集合。 他们可能是具有相同的行为的用户组，具有相似收入水平的居民，具有相似颜色的像素点的组合等等. K-平均聚类算法是一种数值和几何量化算法，因此它所生成的聚类所包含的点在数值上是相近的，在几何上也是彼此相近的。庆幸的是，大多数的数据集都是可以数值化的，因为K-平均聚类算法可适用于多种领域的问题。</p><p>K-均值算法是一个对于量化数据集而言快速，强大并广受欢迎的算法。它的名称来源于两部分：K表达了我们想要算法查找的聚类的个数，均值意味着确定这些聚类中心点的方式(你可以使用诸如K-中位数或K-众数等）。例如，我们设计了一个查找到三个代表整个数据集所有数据点的位置均值的聚类中心的算法，在此算法中，K=3 同时我们使用了K-均值分析的方式来确定聚类中心点的位置。</p><p>K-均值算法是一个迭代算法，这意味着它将在循环中来持续性地更新算法模型，直到模型处于某种稳定状态后才会退出循环并返回模型做为结果。如果更加形象具体地描述，K-均值算法的具体内容是：将你所要分析的所有的数据点绘制在其所对应的空间中，并选取一个K值。你必须在此能够明确地知道K的值，或者至少能够知道K的一个合理的取值范围(在这一节之后我们会给出如何处理这种情况)。之后随机生成K个数据点（如果K=5，生成五个数据点）并将其绘制在对应的空间内；这些点也被称为”重心聚点”，因为它们实质上代表的是聚类数据集的几何中心 。针对数据集空间的所有点，找到离这些点各自几何距离最新的数据重心聚点并将其连接或分配给这些数据点。一时所有的数据点都链接或分配到了数据重心聚点，此时再依次遍历所有的重心聚点并将其位置更新为与其连接或分配到其的所有数据点的平均位置。重复上述分配-更新的过程理直到所有的重心聚点的位置不在变化;这些重心聚点的最终位置即是聚类算法的输出，同时它们也是整个数据集在聚类操作后的分组聚点。上述的过程比较抽象，如果你感觉到很难理解，不要担心，接下来在我们设计并实现整个算法的过程中，我们会更加深入地对其加以示例进行介绍。</p><p>在这一章中，我们将首先讨论均值及距离的概念及及如何将它们应用到K-均值算法之中。之后我们将剖析算法的细节，并完全使用JavaScript来实现K-均值算法。接下来我们将使用多个不同的简单数据集来测试我们所实现的K-均值算法，同时讨论如何处理K未知的问题。我们将创建一个小的工具来自动化地确定K的值。基于以上知识，我们会分析K-均值算法中损失函数的概念，通过设计并实现一个损失函数来帮我们实现优化算法的目标。 以下是几个主要话题:</p><ul><li>均值与距离</li><li>实现K-均值算法</li><li>示例一: 如何使用K-均值算法来处理二维数据</li><li>示例二: 如何使用K-均值算法来处理三维数据</li><li>K-均值算法当K未知时如何处理</li></ul><h2 id="均值和距离"><a href="#均值和距离" class="headerlink" title="均值和距离"></a>均值和距离</h2><p>K-均值算法的运行依赖于两个概念：均值和距离。为了计算出某个聚点中心的位置，算法需要计算所有连接到该数聚点中心所有数据点的平均值。这种情况下，我们会使用算术均值，即所有数据点的数值的和除以数据点的个数来得到这个均值。在ES5/标准JavaScript中,  我们可以创建如下函数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/**  </span><br><span class="line"> * @param &#123;Array.&lt;number&gt;&#125; 数值  </span><br><span class="line"> * @return &#123;float&#125;  </span><br><span class="line"> */</span><br><span class="line"> function mean(numbers) &#123;  </span><br><span class="line">    var sum = 0, length = numbers.length;</span><br><span class="line">    if (length === 0) &#123;  </span><br><span class="line">        /** 在数学定义中，一个空的数据集的均值是undefined,所以我们应该尽早地检测 </span><br><span class="line">         *  到这种情况并中断执行。同时我们也应该允许函数试图计算0/0, 在JavaScript</span><br><span class="line">         *  中会返回NaN，但在一些其它语言中会抛出异常。为了不让函数在此能够处理多种</span><br><span class="line">         *  情况，我们在此直接抛出异常，而不是返回一个混合类型的值</span><br><span class="line">         * /</span><br><span class="line">         throw new Error(&apos;Cannot calculate mean of empty set&apos;);  </span><br><span class="line">    &#125;  </span><br><span class="line">    for (var i = 0; i &lt; length; i++) &#123;  </span><br><span class="line">        sum += numbers[i];  </span><br><span class="line">    &#125;  </span><br><span class="line">    return sum / length;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在ES6中，我们可以通过使用箭头函数来得到一个更为简练的表达式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">const mean = numbers =&gt; numbers.reduce((sum, val) =&gt; sum + val, 0) / numbers.length;</span><br></pre></td></tr></table></figure></p><p>然而上述的代码预设了所有的参数都是已定义好的数值，如果你在调用函数的过程中使用了一个空的数组，它将返回NaN。为了便于理解，我们还可以让上面的代码分解为两个步骤<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const sum = (numbers) =&gt; numbers.reduce((sum, val) =&gt; sum + val, 0);  </span><br><span class="line">const mean = (numbers) =&gt; sum(numbers) / numbers.length;</span><br></pre></td></tr></table></figure></p><p>在此需要注意，我们可以使用任何形式的均值计算方式，包括中位数或众数。实际上，通常我们更倾向于使用K-中位数而不是K-均值。中位数在过滤数据集异常值方面比平均值更能得到更好的结果。因为你在使用过程中要提醒自己哪种均值的计算方式是你所需要的。如果你想要的是一个能够表达所有被消费的资源总数的方法，你可以使用算术平均值。如果你推测到数据集中的异常数据是由于错误的数据收集测量方式导致并且可以忽略的话，K-中数位可能更适合你的计算方式。</p><p>我们同时需要一个计算距离的算法。它可以使用任何一种测量距离的方式，但是，对于数值数据而言，我们更多地还是使用典型的欧几里德距离——你在高中时候学过的标准两点距离计算方式——使用ES5的话它的实现如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">/**  </span><br><span class="line"> * 计算二维数据点a和b之间的距离</span><br><span class="line"> * 每个点应该是一个长度为2的数组，数组的每个数据成员都是数值类型</span><br><span class="line"> * @param &#123;Array.number&#125; a  </span><br><span class="line"> * @param &#123;Array.number&#125; b  </span><br><span class="line"> * @return &#123;float&#125;  </span><br><span class="line"> */</span><br><span class="line"> function distance2d(a, b) &#123;  </span><br><span class="line">     var diff_0 = b[0] - a[0];  </span><br><span class="line">     var diff_1 = b[1] - a[1];  </span><br><span class="line">     return Math.sqrt(diff_0*diff_0 + diff_1*diff_1);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>但实际使用中我们需要支持多维数据，因为可以将上述的实现扩展为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/**  </span><br><span class="line"> * @param &#123;Array.number&#125; a  </span><br><span class="line"> * @param &#123;Array.number&#125; b  </span><br><span class="line"> * @return &#123;float&#125;  </span><br><span class="line"> */function distance(a, b) &#123;  </span><br><span class="line">    var length = a.length,  </span><br><span class="line">        sumOfSquares = 0;  </span><br><span class="line">  </span><br><span class="line">    if (length !== b.length) &#123;  </span><br><span class="line">        throw new Error(&apos;Points a and b must be the same length&apos;);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    for (var i = 0; i &lt; length; i++) &#123;  </span><br><span class="line">        var diff = b[i] - a[i];  </span><br><span class="line">        sumOfSquares += diff*diff;  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    return Math.sqrt(sumOfSquares);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如果使用ES6的话我们可以简化上述的代码为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">const distance = (a, b) =&gt; Math.sqrt(  </span><br><span class="line">    a.map((aPoint, i) =&gt; b[i] - aPoint)  </span><br><span class="line">     .reduce((sumOfSquares, diff) =&gt; sumOfSquares + (diff*diff), 0)  </span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>在装备了以上两个工具函数后，我们可以开始实现K-均值算法。</p><h2 id="实现K-均值算法"><a href="#实现K-均值算法" class="headerlink" title="实现K-均值算法"></a>实现K-均值算法</h2><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><p>我们需要首先配置好开发环境。整个开发环境和第一章中提到的基本相同，以下为创建的具体过程。</p><p>首先，创建一个目录。比如可以全名为<code>Ch4-kmeans</code>。在此目录中创建一个子目录<code>src</code>。</p><p>其次，在项目根目录添加一个名为<code>package.json</code>的文件, 并输入如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">  &quot;name&quot;: &quot;Ch4-kmeans&quot;,  </span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,  </span><br><span class="line">  &quot;description&quot;: &quot;ML in JS Example for Chapter 4 - kmeans&quot;,  </span><br><span class="line">  &quot;main&quot;: &quot;src/index.js&quot;,  </span><br><span class="line">  &quot;author&quot;: &quot;Burak Kanber&quot;,  </span><br><span class="line">  &quot;license&quot;: &quot;MIT&quot;,  </span><br><span class="line">  &quot;scripts&quot;: &#123;  </span><br><span class="line">    &quot;build-web&quot;: &quot;browserify src/index.js -o dist/index.js -t [ babelify --presets [ env ] ]&quot;,  </span><br><span class="line">    &quot;build-cli&quot;: &quot;browserify src/index.js --node -o dist/index.js -t [ babelify --presets [ env ] ]&quot;,  </span><br><span class="line">    &quot;start&quot;: &quot;yarn build-cli &amp;&amp; node dist/index.js&quot;  </span><br><span class="line">  &#125;,  </span><br><span class="line">  &quot;dependencies&quot;: &#123;  </span><br><span class="line">    &quot;babel-core&quot;: &quot;^6.26.0&quot;,  </span><br><span class="line">    &quot;babel-preset-env&quot;: &quot;^1.6.1&quot;,  </span><br><span class="line">    &quot;babelify&quot;: &quot;^8.0.0&quot;,  </span><br><span class="line">    &quot;browserify&quot;: &quot;^15.1.0&quot;  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在创建完成<code>package.json</code>文件为，切换到控制台程序中，在<code>Ch4-kmeans</code>项目根目录中执行命令<code>yarn install</code>。</p><p>接下来，在<code>Ch4-kmeans/src</code>目录中添加三个文件:  <code>index.js</code>,  <code>data.js</code>,  与  <code>kmeans.js</code>。我们将在<code>kmeans.js</code>中完成整个K-均值算法的实现, 同时会在<code>data.js</code>中加载一些测试简单的数据集,  最终将使用<code>index.js</code> 做为我们的程序启动入口并运行一系列的测试示例。</p><p>现在你可能想停下来并测试一下上述我们的设置是否可以正常运行。在<code>index.js</code> 中添加一行简单的代码<code>console.log(&quot;Hello&quot;);</code> 并在控制台程序中执行<code>yarn start</code>  。你将会发现源代码被编译与执行，同时在程序退出前在屏幕上输出<code>Hello</code> 。如果你得到了一些错误代码或者没有看到<code>Hello</code>，你可能需要重新检查你是否按照上述步骤进行了环境的配置。</p><h3 id="初始化算法"><a href="#初始化算法" class="headerlink" title="初始化算法"></a>初始化算法</h3><p>在这一节中，我们将在<code>kmeans.js</code>文件中实现算法。首先是将上述的均值及距离计算的函数添加到文件的顶部。因为它们是通用性的静态函数，我们不会将其放入类的定义中。<br>将以下代码放放文件的顶部<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**  </span><br><span class="line"> * 计算给定数组的均值</span><br><span class="line"> * @param &#123;Array.&lt;number&gt;&#125; numbers  </span><br><span class="line"> * @return &#123;number&#125;  </span><br><span class="line"> */</span><br><span class="line"> const mean = numbers =&gt; numbers.reduce((sum, val) =&gt; sum + val, 0) / numbers.length;  </span><br><span class="line">  </span><br><span class="line">/**  </span><br><span class="line"> * 计算给定的两个数据点的距离</span><br><span class="line"> * @param &#123;Array.&lt;number&gt;&#125; a  </span><br><span class="line"> * @param &#123;Array.&lt;number&gt;&#125; b  </span><br><span class="line"> * @return &#123;number&#125;  </span><br><span class="line"> */</span><br><span class="line"> const distance = (a, b) =&gt; Math.sqrt(  </span><br><span class="line">    a.map((aPoint, i) =&gt; b[i] - aPoint)  </span><br><span class="line">     .reduce((sumOfSquares, diff) =&gt; sumOfSquares + (diff*diff), 0)  </span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><p>接下来，创建并导出<code>KMeans</code>类. 我们将在本章节接下来的内容中在这个类中加入多个函数。 先将以下代码加入到上述工具函数之下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">class KMeans &#123;  </span><br><span class="line">   /**  </span><br><span class="line">   * @param k  </span><br><span class="line">   * @param data  </span><br><span class="line">   */  </span><br><span class="line">    constructor(k, data) &#123;  </span><br><span class="line">        this.k = k;  </span><br><span class="line">        this.data = data;  </span><br><span class="line">        this.reset();  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">  /**  </span><br><span class="line">   * Resets the solver state; use this if you wish to run the * same solver instance again with the same data points * but different initial conditions. */  reset() &#123;  </span><br><span class="line">        this.error = null;  </span><br><span class="line">        this.iterations = 0;  </span><br><span class="line">        this.iterationLogs = [];  </span><br><span class="line">        this.centroids = this.initRandomCentroids();  </span><br><span class="line">        this.centroidAssignments = [];  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">export default KMeans;</span><br></pre></td></tr></table></figure></p><p>我们已经创建了一个<code>KMeans</code>类并将其做为默认的导出模块。上述代码同时初始化了一些类所需要的实例变量，具体如下：</p><p>类的构造函数接受两个参数，<code>k</code>与<code>data</code>, 它们将在初始化过程中被赋值保存到对应的实例变量中。参数<code>k</code>代表了K-均值中的<code>K</code>, 或者说算法输出中的聚类的个数。参数<code>data</code>代表了算法将要处理的数据集数组。</p><p>在构造函数最后，我们调用了<code>reset()</code>方法，它是用来初始化(或重置)算法的状态。我们在<code>reset</code>方法中初始化的实例变量有：</p><ul><li><code>iterations</code>, 简单的计数量变量，来记录算法运行的循环次数，从0开始</li><li><code>error</code>,  记录了当前循环中所有的数据点与其对应的重心聚点距离的均方根误差，即损失函数的值</li><li><code>centroidAssignments</code>, 由所有数据点索引组成的数据，其值为对应数据点相关联的重心聚点的索引</li><li><code>centroids</code>, 保存了当前循环中所有的重心聚点信息</li></ul><p>注意在<code>reset</code>方法中，我们调用了一个未定义的方法<code>this.initRandomCentroids()</code>。K-均值算法必须要有初始化的重心聚点才可以执行，所以这个方法的目的就是随机生成指定数目的重心聚点的信息。由于算法初始于一个随机状态，因此多次执行这个算法将会基于其不同的初始状态而得到不同的结果。这是K-均值算法所期望的一个属性，因为它很可能在某一次运行后得到的是一个局部优化解，所以如果基于不同的初始状态来多次运行这个程序，我们更有可能得到的是全局的优化解。</p><p>在我们生成随机重心聚点前需要得到一些预设信息。首先，我们要必须获得数据集的维度信息。是二维，三维，十维还是1324维？我们生成的随机重心聚点必须与已知数据集的维度相同。这是一个比较简单的问题，我们假设所有的数据点都拥有相同的维度，这样我们只需要检测数据集中的第一个数据点的信息即可得到维度信息。将下述方法加入到<code>KMean</code>类中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/**  </span><br><span class="line"> * Determines the number of dimensions in the dataset. * @return &#123;number&#125;  </span><br><span class="line"> */getDimensionality() &#123;  </span><br><span class="line">    const point = this.data[0];  </span><br><span class="line">    return point.length;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在生成随机初始化重心聚点信息时，另外一个需要考虑的地方就是我们的初始化重心聚点的位置应该与数据集中的数据尽可能地接近。例如，如果数据集中所有的数据点都是在(0,0)与(10,10)之间，你将不会想生成一个位置为(1200,740)的随机数据点。相似的，如果所有的数据点都是负值，你也不会想生成数值为正数的随机重心聚点数据。</p><p>为什么我们要关注随机重心聚点的初始值点？在这个算法中，数据点将被指定与其最近的重心聚点相关联，同时随着运行逐渐地将重心聚点拉到其所属的聚类的中心。如果所有重心聚点都在数据集的右边，那它们将会按照相似的连接路径与数据集相关联，这就导致所有数据点都被关联到其右侧与它们最近的一个重心聚点上，之后这个重心聚点将会被转化成一个局部的最优解。通过随机初始化重心聚点的操作，我们能够更大程度上避免这类的局部最优解的情况。</p><p>我们生成重心聚点初始位置的方法取决于数据集中所有数据点每一个维度的数值范围，在此范围内我们来生成对应维度的随机值。例如，给定数据集包含二维平面(x, y)上的三个数据点：(1,3), (5, 8)与(3, 0)。维度<code>x</code>处于1与5之间,维度<code>y</code>处于0与8之间。因此，在生成随机重心聚点的初始数据时，我们将在1和5之间随机选取一个数值做为随机重心聚点在维度<code>x</code>上的位置, 在0和8之间随机选取一个数值做为随机重心聚点在维度<code>y</code>上的位置。</p><p>我们可以使用JavaScript的数学函数<code>Math.min</code>   与  <code>Math.max</code>  来决定每个维度的数据取值范围。请将如下代码添加到<code>KMeans</code>类中:<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/**  </span><br><span class="line"> * For a given dimension in the dataset, determine the minimum * and maximum value. This is used during random initialization * to make sure the random centroids are in the same range as * the data. * * @param n  </span><br><span class="line"> * @returns &#123;&#123;min: *, max: *&#125;&#125;  </span><br><span class="line"> */getRangeForDimension(n) &#123;  </span><br><span class="line">    const values = this.data.map(point =&gt; point[n]);  </span><br><span class="line">    return &#123;  </span><br><span class="line">        min: Math.min.apply(null, values),  </span><br><span class="line">        max: Math.max.apply(null, values)  </span><br><span class="line">    &#125;;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这个方法首先从数据点的给定维度中收集了所有的数据值。之后返回了一个包含得到数据值的最小值与最大值的对象。例如对于之前例子中的三个数据点(1, 3), (5, 8)与(3, 0), 在调用<code>getRangeForDimension(0)</code>时会返回<code>{min: 1, max: 5}</code>, 在调用<code>getRangeForDimension(1)</code>时会返回<code>{min: 0, max: 8}</code>.</p><p>生成并保存一个包含所有维度数据数值范围的对象将会给初始化重心聚点提供极大的方便。请将如下方法加入<code>KMeans</code>的类中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/**  </span><br><span class="line"> * Get ranges for all dimensions. * @see getRangeForDimension  </span><br><span class="line"> * @returns &#123;Array&#125; Array whose indices are the dimension number and whose members are the output of getRangeForDimension  </span><br><span class="line"> */getAllDimensionRanges() &#123;  </span><br><span class="line">    const dimensionRanges = [];  </span><br><span class="line">    const dimensionality = this.getDimensionality();  </span><br><span class="line">  </span><br><span class="line">    for (let dimension = 0; dimension &lt; dimensionality; dimension++) &#123;  </span><br><span class="line">        dimensionRanges[dimension] = this.getRangeForDimension(dimension);  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    return dimensionRanges;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上述方法遍历了所有的维度并逐一返回对应维度的最大最小值, 最终构造了一个以维度为索引的对象数组。稍后我们将会使用这个方法。现在，我们终于可以来生成随机化的重心聚点初始值了。这将需要生成K个重心聚点，通过遍历数据点的所有维度，在每个维度中选取一个在其最小最大值数值范围中的随机值。请将如下方法加入<code>KMean</code>类中:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">/**  </span><br><span class="line"> * Initializes random centroids, using the ranges of the data * to set minimum and maximum bounds for the centroids. * You may inspect the output of this method if you need to debug * random initialization, otherwise this is an internal method. * @see getAllDimensionRanges  </span><br><span class="line"> * @see getRangeForDimension  </span><br><span class="line"> * @returns &#123;Array&#125;  </span><br><span class="line"> */initRandomCentroids() &#123;  </span><br><span class="line">  </span><br><span class="line">    const dimensionality = this.getDimensionality();  </span><br><span class="line">    const dimensionRanges = this.getAllDimensionRanges();  </span><br><span class="line">    const centroids = [];  </span><br><span class="line">  </span><br><span class="line">    // We must create &apos;k&apos; centroids.  </span><br><span class="line">  for (let i = 0; i &lt; this.k; i++) &#123;  </span><br><span class="line">  </span><br><span class="line">        // Since each dimension has its own range, create a placeholder at first  </span><br><span class="line">  let point = [];  </span><br><span class="line">  </span><br><span class="line">        /**  </span><br><span class="line"> * For each dimension in the data find the min/max range of that dimension, * and choose a random value that lies within that range.         */  </span><br><span class="line">  for (let dimension = 0; dimension &lt; dimensionality; dimension++) &#123;  </span><br><span class="line">            const &#123;min, max&#125; = dimensionRanges[dimension];  </span><br><span class="line">            point[dimension] = min + (Math.random()*(max-min));  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        centroids.push(point);  </span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    return centroids;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上述算法包含了两层循环。外层循环生成了K个重心聚点。由于数据集的数据维度是任意的，每一个维度自身的数据值范围也是任意的，我们必须遍历所有的纬度来生成随机的位置信息。如果你的数据集是三维的，那内层循环将会分别处理维度0,1,2，取得每个维度的最大最小值，之后选取一个随机值，但当得到的这个值指定给当前重心聚点的当前维度做为初始值。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;聚类是接触无监督式学习时常见的一个问题。通常在你想将一个大的数据集重新编排组织成小的群组，或者是将其按逻辑相似性分解成小的群组时我们会考虑聚类。例如，你可以尝试将人口普查数据中的家庭收入分成三个群组：低收入，中等收入及高收入。如果你将家庭收的数据集做为指定的一种聚类算法的输
      
    
    </summary>
    
      <category term="CS" scheme="http://blog.beendless.com/categories/CS/"/>
    
    
      <category term="Machine Learning, JavaScript" scheme="http://blog.beendless.com/tags/Machine-Learning-JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Set up SSL for website with Nginx and StartSSL</title>
    <link href="http://blog.beendless.com/2015/09/26/Set%20up%20SSL%20for%20website%20with%20Nginx%20and%20StartSSL/"/>
    <id>http://blog.beendless.com/2015/09/26/Set up SSL for website with Nginx and StartSSL/</id>
    <published>2015-09-26T14:04:47.000Z</published>
    <updated>2018-12-19T04:31:46.139Z</updated>
    
    <content type="html"><![CDATA[<p>If you enable HTTPS and set up the certifications correctly, which means data will not be decrypted or modified during the transportation. Today I try to enable SSL to my website. Here is what I did to make it happen: </p><p>First, you should make sure your website hosted with a dedicated IP address. Like me buy a VPS from linode. Also you should make sure your HTTP web server support SSL when you set up it. If you are using nginx, just add –with-http_ssl_module when you built it yourself (<a href="http://nginx.org/en/docs/http/ngx\_http\_ssl_module.html)" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx\_http\_ssl_module.html)</a>. </p><p>Secondly, you need to buy a certification. As we know all modern browsers will check CA, in order to recognized by the root authorities, you need to purchase one certificated through them.  Even you can self-signed one to testing which will show warning to users by browser.  Fortunately, there’re some authorities who supply free CA to users like startssl. It’s easy to get a free CA from them. Just sign up and follow the guidance from startssl, then you can get</p><ul><li>Your private key file  domain.key</li><li>Your issued certificate file domain.crt</li><li><p>StartSSL Root CA Certificate and StartSSL Intermediate CA Certificate for your server (ca.pem and sub.class1.server.ca.pem)</p></li><li><p>Now, you can do the below things to contact the certifications to one:</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat sub.class1.server.ca.pem &gt;&gt; ca.pem</span><br><span class="line"></span><br><span class="line">cat domain.crt ca.pem &gt; server.crt</span><br></pre></td></tr></table></figure><ul><li>Then, upload your private key and generated certification server.crt to your server.  Open nginx.conf.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># HTTPS server</span><br><span class="line">#</span><br><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    server_name  server name here;</span><br><span class="line"></span><br><span class="line">    ssl_certificate      server.crt;</span><br><span class="line">    ssl\_certificate\_key  domain.key;</span><br><span class="line"></span><br><span class="line">    ssl\_session\_cache shared:SSL:10m;</span><br><span class="line">    ssl\_session\_timeout  5m;</span><br><span class="line">    ssl_ciphers  &quot;EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !EXPORT !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS&quot;;</span><br><span class="line">    ssl\_prefer\_server_ciphers   on;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>After that, restart your nginx and revisit your website, you will find your website support HTTPS now. Make sure you open 443 port in your firewall configuration.  If you want to forward all HTTP request to HTTPS, just add the configurations below:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       443 ssl;</span><br><span class="line">    listen       80;</span><br><span class="line">    error_page   497  https://$host$uri?$args;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Here is some useful links I followed:</p><ul><li><a href="http://nginx.org/en/docs/http/ngx_http_ssl_module.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_ssl_module.html</a></li><li><a href="https://www.linode.com/docs/websites/nginx/how-to-install-nginx-and-a-startssl-certificate-on-debian-7-wheezy" target="_blank" rel="noopener">https://www.linode.com/docs/websites/nginx/how-to-install-nginx-and-a-startssl-certificate-on-debian-7-wheezy</a></li><li><a href="https://www.ssllabs.com/ssltest/analyze.html" target="_blank" rel="noopener">https://www.ssllabs.com/ssltest/analyze.html</a></li><li><a href="https://imququ.com/post/my-nginx-conf-for-security.html" target="_blank" rel="noopener">https://imququ.com/post/my-nginx-conf-for-security.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;If you enable HTTPS and set up the certifications correctly, which means data will not be decrypted or modified during the transportation
      
    
    </summary>
    
      <category term="CS" scheme="http://blog.beendless.com/categories/CS/"/>
    
    
  </entry>
  
  <entry>
    <title>我的一个夏日清晨，写在天津塘沽码头集装箱爆炸后</title>
    <link href="http://blog.beendless.com/2015/08/13/%E6%88%91%E7%9A%84%E4%B8%80%E4%B8%AA%E5%A4%8F%E6%97%A5%E6%B8%85%E6%99%A8%EF%BC%8C%E5%86%99%E5%9C%A8%E5%A4%A9%E6%B4%A5%E5%A1%98%E6%B2%BD%E7%A0%81%E5%A4%B4%E9%9B%86%E8%A3%85%E7%AE%B1%E7%88%86%E7%82%B8%E5%90%8E/"/>
    <id>http://blog.beendless.com/2015/08/13/我的一个夏日清晨，写在天津塘沽码头集装箱爆炸后/</id>
    <published>2015-08-13T18:04:11.000Z</published>
    <updated>2018-12-19T05:15:56.921Z</updated>
    
    <content type="html"><![CDATA[<p>8月13日，东一区时间早晨六点多。 </p><p>我朦胧着醒来，习惯性得拿起手机想看看刚回国的男朋友是在做什么。可还没来得及看他的留言，就被公共号订阅里面的一批文章炸醒了。这些天已经关闭了朋友全功能，是为了免去朋友圈刷屏和被刷屏的干扰，安心写作的。但这些一眼望去的小标题们——天津？爆炸？阴谋论？一线？核弹？——足够把我拉出本来就不够有定力的小世界。原来，天津塘沽码头集装箱发生了爆炸，周边数公里内的居民区都受到严重震摄，并且因为爆炸剧烈且有毒气体、液体蔓延，消防和救护都直接升级到牺牲的警戒线。还躺在床上，一个人，刷一些新闻、图片和视频。没说什么话也没人说话，也根本没想要说什么话。起床冲凉前，却发现，眼角已经不知觉得弄湿了枕巾一片。 </p><p>8月12日，东八区时间晚上十一点多。 </p><p>天津塘沽码头集装箱爆炸。我刚去跟导师谈完博论的写作困难和冬天想要去香港开会的事。一个人从学校后院的林子里穿过，再回到办公室楼里。可能隔壁还有一两个年轻博士们在工作，其他人都下班回家好一阵子了。夏日傍晚，最凉爽舒适的应该是小院儿凉亭，自己的沙拉、草地上光脚的孩子，可能再给孩子们拉开小帐篷或装满充气游泳池的水，给他们一个可以数星星的夜晚。我又工作了一两个小时，算是两个多月的疏离和度假终于结束了，那一刻又重新踏上写作的旅程。有一点点疲惫，毕竟是懒惯了。但满心舒畅。回家后打一杯香蕉牛奶，洗个温凉的澡，在裸睡的自由中，伴着清冷的月色，呼吸翌日早晨的阳光。不用想，脚指头都知道，明天大早起来吃面包火腿，用摩卡小壶煮杯咖啡，一条条做完三五个文本，下午要跑去南边一家修道院静修一晚和看望朋友。   </p><p>然而，两个时空的交叠，总是滞后的，却总能改变你原来计划的、有轨道的，哪怕是一切。 是的，生活本来的面貌，原本就是不可预见。   </p><p>于是，这个清晨的我，心头有两个冲动，冲动到不解决不行！ </p><p>第一，骂人。   </p><p>满眼望去，一大片歌颂甚至怂恿消防员去送死的路上！有些媒体的脑袋壳里盛满了豆腐花，要溢出来了，得不停地得往回刷。嘴巴长在屁眼上，一开一合，自以为很享受这样的快感，从不觉臭味熏天。眼睛长在后脑勺上，明亮闪光，但是干涸得像灼热的岩浆一样，明亮却不透彻，闪光得一点水灵都没有。就这样的物种，能在这个嘈杂的世界里被封为神明和伟大的光环，能发号施令，让无以数计的还没有豆腐花、没有屁眼、没有后脑勺眼睛的手机刷屏者们，趋之若鹜。   </p><p>死亡，本不是我们自身可以预见或决定的。但它也绝不在别人的手里或舌头底下！每个人的生命都是值得尊重的，凭什么要消防员去送死，凭什么甚至歌颂——并且用歌颂这种近乎下流的怂恿手段把他们送往大火里？是的，他们正在从事的职业，危险系数高，他们的责任就是主动往大火里走，是“逆行”，就像今天很流行的那个漫画图里画的一样。但这个逆行不应该是为了赴死，更不应该被歌颂为赴死途中的光辉背影。如果作为“人民”的我们，不断为他们有可能面临的死亡而致敬和欢呼，那他们不是赴死，而是我们送他们去死。这个逆行的背后，应该是严密的防护措施和强大的应急系统，应该是先进的救助手段和有保障的社会体系。说得难听也直接一点，应该是更先进的设备、是钢铁侠机器人，是更多可以直接动用的资源和知识，而不人，不是那一具单薄的躯体，不是“刚子”。   </p><p>我没有鲁迅的笔杆子，也一时半会儿写不出他老人家笔下的华老栓。那就懒懒地取个自以为是的捷径吧。如果有人还记得《药》，记得华老栓的话。今天，那个咳嗽得不停，得了肺痨的孩子，是我们自己，是自己。华老栓？呵呵，那些个掌握了话语权的媒体及其代理人！而人血馒头，正在我们手里，就是那一群被呼啦啦、摇旗呐喊助威的消防员等类似的“人民子弟兵”。最重要的是，那用来做血馒头的血，那是我们、甚至某些媒体都看不到、也没有能力看到的这个社会的愚昧。我们看不到愚昧的时候，就把它当做狂欢和“精神”来颂扬。就像山顶洞人看不到自然力的时候，就产生了原始崇拜。当我写下这句话的此刻，很平静，很冷，很平静。 对不起，这一刻，我也逆行了。当朋友圈都在称赞赴死英雄的时候，当朋友圈甚至错用一个词叫“逆火而行”（亲们，在火灾现场，任何人都是要逆火而行，往上风向走啊，难道顺着火势嘛……）的时候，当大家用微信这种祈福方式来自慰的时候。对不起，我选择了逆行。   </p><p>再看镜子里的自己———————— </p><p>我的情绪化和冲动可能不比今天凌晨爆炸时候的 TNT效果一样强劲，但也的确足够不专业。我激动了，激动得想要把这些骂人的话骂出来，想要贴出去，去骂人。重要的不是自己是否骂得爽——因为不给人看，自己骂也偷偷骂过了，我们生活中不都这样吗？聪明人就该这样啊，多简单的道理。相反，骂出去，才把自己置于不利地位，置于一个容易被攻击、被误解、被骂的地位。然而，我今天的激动，第一次让我有勇气站在这样的地位。当然，我激动了，这也是年轻气盛的表现。在还未写出更深刻的文字之前，还不能在短短一小时之内把汉娜阿伦特的“平庸的恶”用最可能的方式交流给读者之前，我自己先激动了。这也好不遮掩得透露了我的浅薄和缺乏定立，这是我活该被骂的地方。只是从来深知自己写得不好，不敢示人。而今拉下脸面，因为本来不是个有脸面的人物，这也还拉得下去。露出本来就不怎么样的写作水平，就像露一个像飞机场一样的胸似的。本来就没有胸线，也勾不起什么注意力。露一下图个自己爽快，也练习一下也许将来会有更多露点的镜头。习惯一下，别把自己看得太认真，也没什么。  </p><p>第二个冲动，于他人无关了吧。是自己的，是强烈的、有极大动力的，计划去一个人徒步旅行。 一个人徒步旅行（无太多计划的搭乘公共交通、随走随住），是我一直以来心中的愿望。虽然也有一个人的“旅行”，也曾一个人在几天里从罗马尼亚到匈牙利再到德国，但觉得远远不够，因为不够有途中的孤独和恐惧。或者你会上瘾，越来越可望更多的孤独和恐惧。曾为此愿景过川西、川藏到拉萨，曾愿景过丝绸之路穿欧亚大陆线，还愿景过南法到西班牙和葡萄牙。然而，我一直是那个躺在床上拿着地图去旅行的人，装在套子里的人。这样的人一般是作家笔下嘲讽和批评的对象，但大多数写出这样作品的作家本人，也是这样的人。也可能正是因为内心充满了对自己的嘲讽，在凌迟笔下的人物时，才能毫不手软。不用千刀万剐，只需每一刀，都是剐在自己身上就好。我常常会产生这样的冲动，今天清晨，或许是被塘沽爆炸的冲击波给震到了吧。</p><p>所以，最可怕的，不是这一次事故或震颤，而是不清醒和遗忘。人们都是短视的，也是记忆力不好的。世世代代和全地球的人都是这样，这个动物就是这样，我也是，你也是。但第一步也是最重要一步，我们至少要成人和面对这一点。在今天刷屏祈福称赞，明天做微店生意数钱，后天发游戏晒旅行照的时代里。风向，更容易吹走回忆。期盼有天把这些教训都收集起来，堆积成改变，而不是遗忘。 所以，最重要的，不是这一次激动，筹划着某天的一个人远地旅行，而是要长长久久记得这样激动的感觉，要跨出“原地旅行”的步子。总是这样，激动一次过后，就像雁过留痕而已，却不见了大雁。至少，要记得一次次的激动，期盼有天把这些激动累积起来，变成踏出去的第一步。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;8月13日，东一区时间早晨六点多。 &lt;/p&gt;
&lt;p&gt;我朦胧着醒来，习惯性得拿起手机想看看刚回国的男朋友是在做什么。可还没来得及看他的留言，就被公共号订阅里面的一批文章炸醒了。这些天已经关闭了朋友全功能，是为了免去朋友圈刷屏和被刷屏的干扰，安心写作的。但这些一眼望去的小标题们
      
    
    </summary>
    
      <category term="行走的樹苗" scheme="http://blog.beendless.com/categories/%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%A8%B9%E8%8B%97/"/>
    
    
  </entry>
  
  <entry>
    <title>走进人生的第一个十年</title>
    <link href="http://blog.beendless.com/2015/01/05/title:%20%E8%B5%B0%E8%BF%9B%E4%BA%BA%E7%94%9F%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%81%E5%B9%B4/"/>
    <id>http://blog.beendless.com/2015/01/05/title: 走进人生的第一个十年/</id>
    <published>2015-01-05T21:44:40.000Z</published>
    <updated>2018-12-19T05:06:55.816Z</updated>
    
    <content type="html"><![CDATA[<p>2015，我可以把它称作自己的第一个十年。当然，我不是十岁，这不是我的自然生命的第一个十年，而是我打算标记、也可以标记一下的第一个十年。同样，我也不是二十岁或三十岁，这样用十进制来做标记。甚至，这也不是我人生中有多么重要的一个标记——比如像娱乐圈人士走上星光大道的第几个十年，像穿过婚姻殿堂后的第几个十年，甚至开始工作后的第几个十年。真的都不是。如果一定要安置一个名头，那它是我离开家独自生活的第一个十年，也是我进入大学以后的第一个十年——并且我至今还未被放出来。 </p><p>大概一个多月前，跟导师 <em> 还有他的师弟、也是我的学界前辈兼办公室“室友” </em> 一起谈什么。他们问起为什么我的邮箱账号里面有一个“05”。其实，尤其是十多年前，因为我们用罗马字母拼写自己的名字，经常会撞车，所以常加数字加以区分。我便告诉他们，这个邮箱用户名是我上大学一年级的时候开始用的，也就是2005年9月，从此就没有改过。* 马上取笑我说，“那明年（即2015）就是你进大学后的第十年！你要庆祝一下吗？”被学界大咖的教授们这样逗逗也没什么，只是提醒我，人生中的第一个十年。这十年也是互联网飞速普及的黄金时段，数字化太快，想到十年前，或许都觉得已经很久远。读中学的时候我也很早就申请过搜狐、雅虎还有乱七八糟的好几个邮箱账号。但从没用处，都各自忘记用户名和密码了。或许里面藏了好多青春期的爱好，谁知道呢。直到上大学后，电子邮箱才有所谓认真的用途，也是最无聊的用途。收发作业、资料等，成为学校内外、人群之间的最快捷的交通工具。这十年，掌上移动互联网已经完全控制了数据传输，电子邮件成为最常用也十分不起眼的基本生活工具，甚至多少面临着被部分替代的命运。 </p><p>当然，我不想、也没能力回顾十年来的互联网发展历程，而且2005到2015也并不对互联网，或者其他的任何人、任何事有任何标志性的意义。这样提起，只是为自己创设一个回顾过去的时空隧道，虚构一个十年弹指一挥间的幻象。在这似清晰似朦胧的画面里，我第一次可以有机会标榜一个人生的十年。二十岁出头的时候，根本不会这样来考虑自己的生命。哪怕是为赋新词强说愁，也断然呼不出“十年”的名号。像我等平凡人，到三四十岁的时候或许可以看到自己走过的某个十年，会有点故事，也有所体悟。现在的我，二十七岁，普普通通仍在大学读书，实在没什么可指摘品评的，根本拿不出什么十年与人述说。然而，唯有文字能够承载心灵的记忆。那些一闪而过的念头，若非执念，就只能如同火花转瞬即逝。别说将来的某一天，甚至下一分钟下一秒，你都不会记得自己刚才在想些什么。对于我这样一个几乎24小时都活在自己的脑袋里的人，如此的失忆，与白活真是没什么两样。所以，我想就这样用流水的汉字做一个标记，记住：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2015年的1月4日，在鲁汶家中，我突然想到这是自己人生的可以回首的十年，是我离开家独自生活的十年，是我窝藏在大学校园里的十年。十年之前我还没学会用倒车镜观望自己一路走过的脚印，那样做也的确没什么意义。下一个十年，我或许已不是独自生活，也或许已不在教学楼里。人生中可标记的十年，一双手的数得过来，更何况是这样一段不可复制的青春、这样一种几乎能够决定此生的成长。</span><br></pre></td></tr></table></figure></p><p>过去的十年里我活得很简单，跟大部分年轻人类似，却能够在更无聊这个方面略胜一筹。跟全中国大部分学生一样，2005年的高考和进入大学就决定了今后人生的走向。我不是说它决定了后来的人生是什么样子，但“上大学”这三个字低调奢华有内涵，它们像经年累积的河床渠道一样。哪怕是桀骜不驯、肆意改道的黄河，大部分依然能被它们引向它们自身的方向。说得更直白点，这就是成长教育的力量吧。“上大学”意味着你的专业、地域、学校，以及由此而来你重新认识的人、参加或不参加的事、耳闻目睹的怪与不怪的现状。这一切淹没了你，彻彻底底地淹没你，让你完成“走向成年”的最后一个阶段。虽然法律上通常把18或16定为是否成年的标志。但这并不符合中国孩子的教育和经历，至少不符合我这一代人（85后）的现实。再说回自己，被调剂到*大，调剂到历史学专业，调剂到历史学基地班。如果是很有个性的青年，或许在大浪袭来之后马上能只身跳出，策马奔向自己心中的风景。而如我这样中规中矩的孩子，我在呛水之后的反应是非常直接且简单的——第一接受，第二适应，第三反思，第四寻求出路。此处没有任何吐槽嫌疑。从心的勇气和毅力的确是值得称道甚至令人羡慕的，也是这些年越来越被推崇的理念。说得直白点，就是任性。但把“从心”二字变成上下结构，则是“怂”。这个字在今天的口语中被当做妥协的状态，由本意“惊”引申而来。因惊慌害怕而失去本心，容易受外界影响，所以被鼓动而“从他人之心”或“从大多数人之心”，非自己的本心。（此处个人阐释，无参考）“从心”到底是从谁的心，这天地之别看来也只是锱铢之别。“任性”与“韧性”之间的距离可以换个角度来丈量。比如，逆来顺受可以逼自己走出原来的舒适区域，而尝试着认识和理解自己曾经并不喜欢、可能是压根都不了解的世界。这些，都是进了历史基地班才耳濡目染，慢慢懂得的。鬼使神差，在大二的时候居然想要继续学历史而放弃了转专业的机会。这个鬼使神差的缘由是可以分析的——当时可能是多多少少感受到一些历史学的批判态度和智慧，也可能是一种安于现状而不愿迁居的惯性和惰性，也或者是不敢尝试新的专业和学院的怯懦。总之，暂时留下来。谁知道，也因为历史基地班超高保研率的助推力，基于上面这几个原因的延续，这个暂时，就“暂”到了现在。四年本科、三年研究生、直到目前第三年博士在读，我都在这条路上“暂时”，并且越走越远，与其他岔路口的交集也越来越少。与大二时候选择留下的缘由是几乎一样的，我就留到了现在，也走到了现在。虽然换了研究领域、换了学校也换到了国外、换了导师换了环境换了语言，但仔细想来，这留下的缘由还是一样的。也正因为当初这个缘由当中，收纳着各种不同角度的撕扯和纠结，这些隐藏的祸根到今日还如同毒药一般折磨我，让我不停地怀疑，是留？是走？ </p><p>可无论内心多少的挣扎和没出息，事实上能看到的，便是我一直不断地往前走，甚至似乎一路顺利。本科和研究生相继毕业、博士在读，寥寥几个字就可以说完我这个十年。若说它像一眼望得见的平川，它的确清晰明了又水波不兴，甚至单调乏味；但若说它真如白开水，这其中五味杂陈和步履蹒跚，都满满地印在心头。我仍一介学生，虽已成为高龄学生或被称作第三类人，这都并不稀罕。我也几乎与曾经一样接人待物。在处人处事的策略方面，我不会刻意假托十年前的自己如何清纯小白和不谙世事；十年后的今天，我也没能脱胎成一个多么精明能干或对人群驾轻就熟的御姐。我们普通人没有生活在皇宫内院、权力漩涡中，我们的成长不会像甄嬛或武则天那样黑白分明（不过话说电视剧里的反差的确有些太过刻意而显得虚伪了），更何况我一个常年幽居在大学校园里，整日又蜗又宅的女学生。但图书馆和象牙塔让我在另一个世界里环游。我阅得多、历得少。虽无亲身经历职场暗涌和社会险恶，但有机会一窥那阅不尽的沧桑。这安安静静的书屋里装得下上古的史诗和开天地辟洪荒的传说，远至希腊罗马的金戈铁马和春秋战国的唇枪舌剑，幽深的中世纪修道院和墓地魂灵，绽放在巴洛克和文艺复兴时期的辉煌绚烂，汉唐的盛世欢呼与中原逐鹿的厮杀，宋明学人的思想和满清时期的中国与欧洲，法国大革命后的世界，……。如我之笨拙和懒惰，依然在小小的书屋里迷路，精疲力尽。纵使勤力且聪颖的，可能也要好几个十年来摸索这里的道路。于是，我在这里先是找路，再是找可以照路的烛火，然后继续找路。所以，从被调剂到历史基地班到现在的这十年，也是我开始学习历史学并摸过其他哲学文学与文艺批评的书籍的第十年。这十年我听到、看到好多个可能的世界，可以在书中向好多智慧的头脑学习。这十年，也是对我内心的洗礼。真的不得不扯到世界观、价值观、人生观这样最俗最基本最不愿被挂在嘴边的问题了，这十年，的确重新反思了17岁之前的心灵，用批判的态度重新洗脑。这一路也是波澜壮阔的。（具体实在的证据只存在于我自己对一些问题的见识和思考，存在于我所写下来的文字。毕竟初学，写字太少，思而不学则殆了。）思想上的痛苦于我而言定不如它们对一些思想家和天才们的冲击力，但也足以给我一双重新看待黑暗的眼睛。于是，就这样越走越远，与其他岔路口的交集越来越少。到眼下，我的脚步既不是越轻松也不是越沉重，没有陷入泥淖却也无法疾步。只是，只是我劝自己少张望，多走路。 </p><p>忆往昔仍是要看今朝。这篇日志更应该写成2015的新年计划吧。这是我走完人生这第一个十年的最后的机会。能否“华丽转身”，实则取决于2015了。壮志雄心不可缺，却也并不是什么决胜因素。写下新年计划并不能保证真的完成。并非理想丰满现实骨感，而是愿望如画饼充饥，许愿的功夫与空手“画一个圈”没什么两样，实现的道路才要自己有披荆斩棘的勇气和毅力。具体的计划就不写在这里了，另见。 </p><p>么心愿，那惟愿将来的自己能够写下“悉数人生的第*个十年”这样的段落，也有故事可以述说与人听。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2015，我可以把它称作自己的第一个十年。当然，我不是十岁，这不是我的自然生命的第一个十年，而是我打算标记、也可以标记一下的第一个十年。同样，我也不是二十岁或三十岁，这样用十进制来做标记。甚至，这也不是我人生中有多么重要的一个标记——比如像娱乐圈人士走上星光大道的第几个十年
      
    
    </summary>
    
      <category term="行走的樹苗" scheme="http://blog.beendless.com/categories/%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%A8%B9%E8%8B%97/"/>
    
    
  </entry>
  
  <entry>
    <title>2014年10月19日</title>
    <link href="http://blog.beendless.com/2014/10/19/2014%E5%B9%B410%E6%9C%8819%E6%97%A5/"/>
    <id>http://blog.beendless.com/2014/10/19/2014年10月19日/</id>
    <published>2014-10-20T05:36:28.000Z</published>
    <updated>2018-12-19T03:52:29.649Z</updated>
    
    <content type="html"><![CDATA[<p>安穩無憂的日子裡，沒有疼痛，就不會去想愛恨情仇。 痛，才是真實和最寶貴的。 這樣的安穩無憂，是生活的終點，是不快樂的根源。然而，快樂，到底是什麼？幸福，到底是什麼呢？ 苦難，是恩賜，是機遇，是命運的另一種可能。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安穩無憂的日子裡，沒有疼痛，就不會去想愛恨情仇。 痛，才是真實和最寶貴的。 這樣的安穩無憂，是生活的終點，是不快樂的根源。然而，快樂，到底是什麼？幸福，到底是什麼呢？ 苦難，是恩賜，是機遇，是命運的另一種可能。&lt;/p&gt;

      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>飞鸟</title>
    <link href="http://blog.beendless.com/2014/10/15/%E9%A3%9E%E9%B8%9F/"/>
    <id>http://blog.beendless.com/2014/10/15/飞鸟/</id>
    <published>2014-10-15T17:54:12.000Z</published>
    <updated>2018-12-19T04:55:38.979Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">海水呀，你说的是什么？ </span><br><span class="line">What language is thine, o sea? </span><br><span class="line"></span><br><span class="line">是永恒的疑问。 </span><br><span class="line">The language of eternal question. </span><br><span class="line"></span><br><span class="line">天空呀，你回答的话是什么？ </span><br><span class="line">What language is thy answer, o sky? </span><br><span class="line"></span><br><span class="line">是永恒的沉默。 </span><br><span class="line">The language of eternal silence.   </span><br><span class="line"></span><br><span class="line">我今晨坐在窗前，世界如一個路人似的，停留了一會，向我點點頭又走過去了。 </span><br><span class="line">I sit at my window this morning where the world like a passer-by stops for a moment, nods to me and goes.   </span><br><span class="line"></span><br><span class="line">你看不見你自己，你所看見的只是你的影子。 </span><br><span class="line">What you are you do not see, what you see is your shadow.   </span><br><span class="line"></span><br><span class="line">我不能選擇那最好的。 是那最好的選擇我。 </span><br><span class="line">I cannot choose the best, The best chooses me.   </span><br><span class="line"></span><br><span class="line">神呀，我的那些願望真是愚傻呀，它們雜在你的歌聲中叫囂著呢。 讓我只是靜聽著吧。 </span><br><span class="line">My wishes are fools, they shout across thy song, my master. Let me but listen.   </span><br><span class="line"></span><br><span class="line">人是一個初生的孩子，他的力量，就是生長的力量。 </span><br><span class="line"></span><br><span class="line">Man is a born child, his power is the power of growth.   </span><br><span class="line"></span><br><span class="line">神希望我們酬答他，在於他送給我們的花朵，而不在於太陽和土地。 </span><br><span class="line"></span><br><span class="line">God expects answers for the flowers he sends us, not for the sun and the earth.</span><br></pre></td></tr></table></figure><p><strong>──节选自泰戈爾的《飞鸟集》</strong></p><p>这并不是一个多么愉快的清晨。不，已经日上三竿了，但还是不那么愉快的。幸运的是，这样的不愉快让我想到叔本华和飞鸟。并不相关的东西么？不， 哲学家和诗人是看似相距甚远的两个星球，但却是两个一模一样的星球。</p><p>依然是不愉快，就好像牙疼还不见起色一样。但这并不影响窗外的阳光，不影响婆娑的落叶，不影响树林子红红黄黄的，秋天的轻轻的脚步。哲学家可能还在吧台边或者已经在课堂上，诗人也该起床了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>写作，再一个重头开始</title>
    <link href="http://blog.beendless.com/2014/09/22/%E5%86%99%E4%BD%9C%EF%BC%8C%E5%86%8D%E4%B8%80%E4%B8%AA%E9%87%8D%E5%A4%B4%E5%BC%80%E5%A7%8B/"/>
    <id>http://blog.beendless.com/2014/09/22/写作，再一个重头开始/</id>
    <published>2014-09-23T06:02:27.000Z</published>
    <updated>2018-12-19T05:26:45.646Z</updated>
    
    <content type="html"><![CDATA[<p>或许是欺骗了自己很多年，或许是辜负了自己很多年――我一直以为自己深爱写作，却从未成为一个成功的作者，甚至已经好几年不去尝试。 </p><p>开始喜欢写作大概是从初中一年级，那才是可以基本摆脱字典来读汉字的年纪。也是青春期叛逆的年纪吧，我总是扎在人群里，陷在一个每天都吵成一锅粥的家里，就用写作的方式为自己搭起了真空窝，跟自己谈心。那也是新概念作文奖和一群新秀在作协崭露头脚的黄金年代。读着那些与自己的世界相差不算太大的文字，便自以为是地与写作亲近了很多，开始梦想着也成为一个作者。 </p><p>一个不为人知的梦想被我怀揣了大概六七年，高考后从西北的小城到了西北的大城，黄河水的荤腥气又把我们赶到另一个山窝窝里。慢慢的也就不写了。对大千世界的想像力都变成一眼可以望得到头的大学生活。在你不到二十岁的年纪里却困在一个村里过起了六十岁的退休生活，在你还不懂得互联网和华尔街的花里胡哨之前就落进了历史系那个讲求寂寞踏实和岁月沧桑的深井。这样的际遇也不是每个人都有。此时并不是抱怨这有什么不好。事实上，不同的际遇和经历便造就了不同的青春，后来就是不同的人生路。我几乎算是以草包形象进入历史系的，历史这一科本来就是我所有文科专业最差的一项，更别提教科书以外的任何知识背景了。或许正是因为这样，它突然为我打开了另一个全新的世界，一个远离今天、远离人群的世界。于是，就在这条通往永恒无知的时间隧道里，我开始往回走，往过去而不是未来的方向走，走到现在只是第十个年头。好像一路在摸黑了，越读书越看到自己的浅薄，越觉得自己连个好读者都算不上，于是也越来越不记得曾经还有个想当作者的梦想。 </p><p>第十个年头，这在中国古代的私塾可能还没读完四书五经。但在时间概念和世界观已经全体相对化的今天，这已经是一个“学生”要变为“学者”的年头。学者，顾名思义就是学习的人、甚至终身学习、以学习为业的人，但已经不能强调那个“生”字了。于是，也担负起一些责任，不能光自己学了，还要帮助别人学。这才是“学”成为一种职业的意义。好吧，眼下看来，它是我的职业。自己当海绵的时候还是挺简单的，吸得饱就是自己的幸福；可现在是要挤的时候，那怎么样才能挤得出，又让别人吸得进呢？写作，这个问题在十年后重新回到我的写字台。这些年，写字台都当成阅读台来用了。 </p><p>面对着眼前在写作中遇到的技术困难，也回想起曾经想要成为的那种作者，对比一下此刻首先要成为的写学术论文的作者，我疑惑了好久。最近的日子都是在挣扎中度过的。因为研究思想史和学术史的缘故，我也自认为在书里认识了不少前现代时期的中外学者，也专门研习过他们的经验之谈。这算是站在写作门外的功课吧。而要进入门内，只有一把钥匙——写。听道理、懂道理，我们都不难做到，但怎样才能做得有道理、活得有道理，答案只能在于你自己是如何做、如何活的。其实，这几年我也不是没有写过东西，但从未示人。因为怕自己写得不好，借用甄嬛阿姨的话说，“恐污了尊耳”。久而久之，我都写成了自言自语。甚至连学术论文都变成这样，老师说我一直在添加自己的知识背景，但却没有授读者以鱼，更别说是渔了。 </p><p>两年前就跟男朋友专门在美国留了一个服务器来开设自己的网站，美其名曰在这里练笔，后来的它只变成了堆积尘土的后花园，刚开始最多也是杂草丛生，现在几乎成了寸草不生。 </p><hr><p>写到此处，临时接到翻译的活，一口气干了两天。这里也接不上茬了。也罢也罢。 </p><p>翻旧账于事无补。今天的改变也没太大的雄心壮志，也可能谈不上有什么意义。但是，就这样开始写起来了呢。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;或许是欺骗了自己很多年，或许是辜负了自己很多年――我一直以为自己深爱写作，却从未成为一个成功的作者，甚至已经好几年不去尝试。 &lt;/p&gt;
&lt;p&gt;开始喜欢写作大概是从初中一年级，那才是可以基本摆脱字典来读汉字的年纪。也是青春期叛逆的年纪吧，我总是扎在人群里，陷在一个每天都吵成一
      
    
    </summary>
    
      <category term="行走的樹苗" scheme="http://blog.beendless.com/categories/%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%A8%B9%E8%8B%97/"/>
    
    
  </entry>
  
  <entry>
    <title>写遗嘱之前</title>
    <link href="http://blog.beendless.com/2014/06/07/%E5%86%99%E9%81%97%E5%98%B1%E4%B9%8B%E5%89%8D/"/>
    <id>http://blog.beendless.com/2014/06/07/写遗嘱之前/</id>
    <published>2014-06-07T17:33:07.000Z</published>
    <updated>2018-12-19T05:24:57.467Z</updated>
    
    <content type="html"><![CDATA[<p>我满脑子只有一个念头：</p><p>薄薄的刀片，在我的房间里随处可见；</p><p>用它划开左手的手腕，正面、平放，最清晰的动脉；</p><p>轻轻地划开一厘米就够了。</p><p>是不是一厘米就够了，可能需要做个小小的知识调查，或者，亲自的实验一下也可以。 </p><p>就只有这样一个念头，死去。 </p><p>已经不是第一次有这样的念头，但依然为此感到恐惧。</p><p>我发现自己在颤抖，在哭泣，哭得出了声。 </p><p>也许是太懦弱所以才不止一次地想到了死，也正是因为太懦弱才不敢去死。 </p><p>我知道答案，我必然会有一天不再如此懦弱，至少必然会有一次不是如此懦弱。 </p><p>现在唯一的未知是，某天当我勇敢起来的时候，是勇敢地面对死，还是勇敢地面对生。 </p><p>写份遗嘱，或许是必要的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我满脑子只有一个念头：&lt;/p&gt;
&lt;p&gt;薄薄的刀片，在我的房间里随处可见；&lt;/p&gt;
&lt;p&gt;用它划开左手的手腕，正面、平放，最清晰的动脉；&lt;/p&gt;
&lt;p&gt;轻轻地划开一厘米就够了。&lt;/p&gt;
&lt;p&gt;是不是一厘米就够了，可能需要做个小小的知识调查，或者，亲自的实验一下也可以。 &lt;/p
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>为了流浪的远方</title>
    <link href="http://blog.beendless.com/2014/05/20/%E4%B8%BA%E4%BA%86%E6%B5%81%E6%B5%AA%E7%9A%84%E8%BF%9C%E6%96%B9/"/>
    <id>http://blog.beendless.com/2014/05/20/为了流浪的远方/</id>
    <published>2014-05-20T17:32:17.000Z</published>
    <updated>2018-12-19T05:38:08.993Z</updated>
    
    <content type="html"><![CDATA[<p>那颗不肯被安放的灵魂，你就跳跃吧，你去飞翔吧。</p><p>渴望改变，是的，渴望着改变，那就改变。</p><p>真的不用怕，因为根本没什么好怕的。</p><p>停不住脚步，流浪，为了达不到的远方，为了找不到的家乡。</p><p>一直这样走着，盲目着也纠结着，其实是向着一个可以停下脚步的地方。</p><p>然而，</p><p>还没有。</p><p>那就继续走。</p><p>燕子本是不安的，可以徘徊，也有往返，但终究是不安的。</p><p>勇敢，光芒，挑战，希望，</p><p>都不得不面对懒惰、懦弱、恐惧、麻木，面对被偷偷地吞噬。</p><p>但那藏在血液中的，依旧是</p><p>勇敢，光芒，挑战和希望。</p><p>这样，</p><p>才是真正的燕子。</p><p>有热情和温情，有睿智和果决，</p><p>有勇气。</p><p>有勇气。</p><p>有勇气。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;那颗不肯被安放的灵魂，你就跳跃吧，你去飞翔吧。&lt;/p&gt;
&lt;p&gt;渴望改变，是的，渴望着改变，那就改变。&lt;/p&gt;
&lt;p&gt;真的不用怕，因为根本没什么好怕的。&lt;/p&gt;
&lt;p&gt;停不住脚步，流浪，为了达不到的远方，为了找不到的家乡。&lt;/p&gt;
&lt;p&gt;一直这样走着，盲目着也纠结着，其实是向
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>去屎 vs. 去死</title>
    <link href="http://blog.beendless.com/2014/03/23/%E5%8E%BB%E5%B1%8E%20vs.%20%E5%8E%BB%E6%AD%BB/"/>
    <id>http://blog.beendless.com/2014/03/23/去屎 vs. 去死/</id>
    <published>2014-03-23T21:48:43.000Z</published>
    <updated>2018-12-19T05:27:41.749Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚临睡前看完一本很短的小说，比利时作家 Dimitri Verhulst 十多年前的作品，已被译为英文和中文的畅销书（<em>De helaasheid der dingen</em>; <em>The misfortunates</em>; 《废柴家族》）。这是一本被称作“半自传式”的小说，以一个十多岁少年的视角冷眼旁观自己的家庭——主要是爸爸和叔叔们，一群只能跟老母亲挤在老房子里蹭救济金的醉汉们。他们生活在连小小的比利时地图都可将其遗忘的小镇上（译者称作宝旮旯），每日烂醉、满口粗暴。略有腐臭的黄油和拉屎的味道不相上下，男孩比谁的膀胱能尿得更高更远，而女孩同样能依靠这种方式涓涓地引来一群小鱼。小说里浸透了琥珀色的啤酒，随处可见阴毛，呕吐物更是堆在满纸。可是这个家庭的温暖在兄弟们、叔侄们、父子间默默地储存着。这样的温暖是可以给敌人一记左勾拳的能量。说“敌人”这个词或许太过了，只是一种愤怒，一种可被称为无产阶级的一家人在面对小资产阶级的谩骂和指责时，爆发出来的本能吧。同样，高唱着生理反应的酒歌，这个家庭的热血也浇灭了民俗学家的学术和研究，眼见着后者显得如何虚伪和苍白。兄弟们、小清新的公主表妹、临终前的痴呆奶奶都能唱《采木耳之歌》——“奇迹时代不停息，眼见天干又物燥，我的木耳湿又润。鸡叫过一遍，鸡叫过两遍，我感觉爽翻天。”（引自译文）而偏偏翘首企盼这段歌词的民俗学家们就愣是没机会听得到。 </p><p>如果我的阅读还是靠近作者的话，小说所到之处描写得最干净和精致的东西是，奶奶，还有墓碑。一手提着水桶、一手拿着抹布的奶奶，还有另一个老妇人会每天擦得锃亮的、已故亡夫的墓碑。小说的最后，作者本人的、来自于一夜情的儿子也在长大，在一个不是这样的家庭中长大；而小说写完的时候，奶奶也去世了。死亡，是最干净、最平等、最安然的东西，无论在世界的任何一个角落。同时，死亡的冰冷，并不打扰活着的兴趣，不管是活得烂醉如泥、还是活得西装革履。 </p><p>翻看“满纸荒唐言”的时候，我在使劲回味自己喝过的啤酒或其他烈酒的醇味、老木头和吧台上弥漫的朽味，还有宿醉和翻江倒海之后的呕吐和恶心味。那是荒诞还是真实？文学作品中的中式“荒诞派”在莫言获诺贝尔文学奖的时候已经是众所周知了，门罗笔下的奇幻色彩也被称道。但这被称作荒诞奇幻的，并非来自科幻小说般的想象，而是来自最真实的生活的每一个毛孔。当你细心聆听一扎啤酒灌下喉咙、一路倾泻直达食道、胃粘膜、肠道、膀胱和尿管，再径直喷涌到茅坑里的声音；当你仔细看着只有一个晃动的糙木板的洗手间，那木板只是挖了一个洞就搭在粪池上一米距离的地方，而蛆在跟你不到二十厘米处就那么一毫米一毫米地蠕动，再一个跟头滚进粪池；……（着急出门见朋友，这里先不写了）。超现实的荒诞与纯写实的记事之间，或许只隔着一个内裤的厚度。 </p><p>话说回来，我更感兴趣的是作者如何在家庭的成长道路上，身在其中，又能全身而退。他目光冷峻，如旁观者在讲述别人的故事，极尽尖刻、毫无保留；但若不是用心深爱着故事里的人物、爱着这个家庭，甚至爱着这种生活和回忆、态度，他也不会讲出肮脏中的温暖和智慧。“半自传式”的小说完全等于割裂自己。一刀刀凌迟在自己身上，刮下肉、渗出血，作家本人没有手下留情，才能让观者观得触目惊心。突然想到捷克斯洛伐克的一位行为艺术家（忘了名字了，改日补上）。   </p><p>PS: 我可真是个特别没意思又特别较真的人，简称为无聊的人。一个人蹲坐在屋子里焦躁不安的时候，满心只想着聊天。然而享有一切的通讯设施和网络资源，却不知要如何与他人聊天、聊什么天、甚至为什么聊天。于是只好继续面向自己，问问自己怎么是一个如此无聊的人。可怎么问着问着，就写了上面这些东西。算了，精神病人欢乐多。同乐同乐。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨晚临睡前看完一本很短的小说，比利时作家 Dimitri Verhulst 十多年前的作品，已被译为英文和中文的畅销书（&lt;em&gt;De helaasheid der dingen&lt;/em&gt;; &lt;em&gt;The misfortunates&lt;/em&gt;; 《废柴家族》）。这是一本被称
      
    
    </summary>
    
      <category term="行走的樹苗" scheme="http://blog.beendless.com/categories/%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%A8%B9%E8%8B%97/"/>
    
    
  </entry>
  
  <entry>
    <title>情人节的故事</title>
    <link href="http://blog.beendless.com/2014/02/05/%E6%83%85%E4%BA%BA%E8%8A%82%E7%9A%84%E6%95%85%E4%BA%8B/"/>
    <id>http://blog.beendless.com/2014/02/05/情人节的故事/</id>
    <published>2014-02-05T20:13:43.000Z</published>
    <updated>2018-12-19T05:17:37.132Z</updated>
    
    <content type="html"><![CDATA[<p>早晨天空湛蓝，极目处才望得见丝柔般的白云，遥远，也清清淡淡。晚上睡前就准备好了雨伞，本是要照着天气预报迎接整整一星期的雨天；谁知醒来后却见到这样的明亮。于是，专门绕个稍远的路去甜甜的面包店，去准备一块蝴蝶酥和一杯卡布奇诺的早餐，走在清晨的阳光中。 </p><p>还未到面包店就看到学校一家书店的橱窗换上了大大的心形和玫瑰的广告。红彤彤的，只让我想起远在中国的农历新年。这是为情人节做准备吧？同样是美好的。从面包店拎着给自己的食粮，心满意足，继续轻快地走去办公室。阳光暖，照着前行的路，刚好让迎面吹来的冷风不会显得那么冰凉。再哼两句小曲儿，还一边心想着怎么用各种七七八八的欧洲语言和中国方言说“早上好”，越发觉得有趣和惬意。眼瞅着路口的交通灯变成红色，也不会不耐烦，等得很安静。 就在我身旁，在十字路口的转角，在一家还没来得及开业的soup bar（就卖汤和三明治）门口，三个年轻人的对话随风飘进我的耳朵。   </p><p>女孩：我不知道……我，我……<br>男孩A：为什么？告诉我，这是怎么一回事？！<br>男孩B：(⊙o⊙)…（默默）<br>男孩A：我不懂，为什么？是怎么发生的？<br>女孩：(⊙o⊙)… （也默默）   </p><p>绿灯——我继续前行。清晨的阳光被走到身后，面前便是一条长长的影子。长到好像宫崎骏的《千与千寻》里面那一群鬼魅。此时又有一个影子出现在我身后，再到我身旁，再到我面前。在他掠过我的那一刻，我听得到一些窸窸窣窣的声音。他红着眼睛，不时地也顺手抹一把，一步步继续往前走，走得很快。他是哭了还是昨晚没睡好呢？按着我们的影子向前顺延的方向，你看得到他的背影。一双不起眼的球鞋，却好像容器，可以装着还不到一米八的他走到天涯海角。牛仔裤约摸是深蓝色的，也并不时尚，有些皱皱巴巴，松松垮垮地套在一起一伏的屁股上。看得到，他的线条和轮廓都不是那么的吸引眼球。一身卫衣也是蓝色系。此时那卫衣并不显得绵软舒适，因为顺着袖口你就看得到他又抹了眼睛。但男孩的头发很黑，短短的带着微微的自来卷儿，非常精神。也是在他掠过我的那一刻，我看得到一些侧脸，并不十分清楚。只记得他应该是个满脸胡，刮过胡须有两天的样子；他鼻梁挺拔却不是北欧人那么高；眼眉也似乎浓浓的。男孩或许是个意大利人，或者至少来自欧洲南部。 </p><p>男孩比我走得快，背影也模糊了。我才转念想起两分钟前在十字路口的转角听到的对话。他们都是用英文，也很明显都是各自的第二外语。（男孩B没怎么说话）女孩和男孩A的长相更有南部特征——对，男孩A就是那个掠过我的影子；而男孩B是典型的北部大高个，整个人都透着白皙。他们之间发生了什么，你和我都并不十分清楚。这里有一个最简单的情节版本。女孩和男孩A相识较早，或者是来自同一国家甚至同乡。他们本也相好，直到女孩和男孩B默默地走到一起。默默的，就如同他们在十字路口那样的默默。经过某种可以设计N多剧情的波折，男孩A不得不面对一个事实，他的女孩将不再是他的，她要与男孩B在一起。于是，男孩A便成了那个背影。 </p><p>不知是什么样的剧情安排，让这一切发生在情人节到来之前。接下来，男孩B和女孩可以有第一个情人节去庆祝，可以作为将来的纪念；而男孩A可以有这个情人节作为一段故事的结束和新生活的开始。对于有些人，转角遇到爱；而另一些人，转角失去爱。我只是不经意间的路人，看到他们的爱与不爱。 </p><p>情人节的故事可以有各种版本，或许也可以像人类学家Arnold van Geneep研究仪式过程那样，把它们分为三个阶段：爱前、爱中和爱后。我们对爱有期待，有选择和纠结，也肯定会有疼痛。无论是跟谁、哪一种爱、在哪个阶段，爱得猛烈就必然有伤害，爱得温柔也逃不过那伤害。出现在自己生命里的人，总是有来有往；就如同自己也以不同方式出现在别人不同阶段的生命里一样。就让故事的最高潮亢奋和最撕心裂肺都融化在清晨的阳光里吧。暖暖的，哪怕就那么一会儿，也足够美好。 </p><p>跟看到这里的人们说：不管此时的身边有没有那个他/她/它，祝你，情人节快乐！ </p><p>跟我自己说：前几天弄伤的骨头还在疼，一堆书和论文还搁着，就不要操心这些个爱与不爱的事情了！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;早晨天空湛蓝，极目处才望得见丝柔般的白云，遥远，也清清淡淡。晚上睡前就准备好了雨伞，本是要照着天气预报迎接整整一星期的雨天；谁知醒来后却见到这样的明亮。于是，专门绕个稍远的路去甜甜的面包店，去准备一块蝴蝶酥和一杯卡布奇诺的早餐，走在清晨的阳光中。 &lt;/p&gt;
&lt;p&gt;还未到面包
      
    
    </summary>
    
      <category term="行走的樹苗" scheme="http://blog.beendless.com/categories/%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%A8%B9%E8%8B%97/"/>
    
    
  </entry>
  
  <entry>
    <title>一个人跑步</title>
    <link href="http://blog.beendless.com/2014/01/16/%E4%B8%80%E4%B8%AA%E4%BA%BA%E8%B7%91%E6%AD%A5/"/>
    <id>http://blog.beendless.com/2014/01/16/一个人跑步/</id>
    <published>2014-01-16T08:01:31.000Z</published>
    <updated>2018-12-19T04:36:49.683Z</updated>
    
    <content type="html"><![CDATA[<p>冬日里的鲁汶在傍晚时分就已经黑黢黢的，砖红的小城一股脑儿得都罩在昏黄的路灯中。淅淅沥沥，还下点儿下雨。今年是个暖冬，可比台北舒服些。听说台北那股子冰冷，冬季还是到鲁汶来看雨吧。我总是小心翼翼地爱着鲁汶的雨。这里的雨很随性，随来随往。（似乎只有两小时内的天气预报才能说得稍微准一点。）它通常是安静的，一点儿都不闹腾。有时候大雨，它就可劲儿了下，像个自娱自乐的、还不会用学步车的孩子。没三五分钟，或许就过去了。天很低，满是像赶着聚会一样的云层，跑那么快。几乎是不会放晴了。过阵子它又开始下，或许就下了一整夜。</p><p>近来生活过得平常。很一个人，吃饭工作学习，走路借书撑伞，睡觉弹琴跑步，生活。每件事都做得专注，专注得做完了一件就不知道如何过渡到下一件。下午四点以后，楼道里的脚步声多是为了离开而响起的。几乎没有人上班到晚上七点或者八点以后，因为那个时间是用来与家人朋友或情人爱人吃晚饭的。与往常一样，我也该下班了。可越是用心工作，停下来的那一刻，就越能感到空气有多稀薄。就好像高速行驶的列车轰隆隆滑过轨道，哪怕按照既定的时间和程序让它慢下来，它也只会笨笨地愣在那轨道上，没有方向感，没有安全感。因为，不奔跑的它从来不知道自己该向何方。</p><p>这便是被称作“孤独”的东西吗？是一个人对着电脑、对着蜡烛、对着一个人的房间和墙壁吗？是影子还是黑暗在做伴？这样子，还好吗？</p><p>仔细想来，正是这样的孤独给了自己某种近乎不要脸的幸福感。人，就总是要与人在一起的。我并不是赞同所谓“群居动物”的观点；而是从人的灵性生活来说（不是——性生活），每个人都需要与外在于自我的任何东西产生联系。对，任何东西，其实也不一定非要是人。真的是任何东西，宠物或者一本书、一盏茶，哪怕是所暗恋的对象，或是最近在赶的文案、报表，或根本渴望不可及的“梦想”，再或者是一摊砸在手里的生意，甚至你的敌人。任何的一种联系都可以成为证明自我存在的论据，联系越多，自我存在感就越强。然而，当联系过多的时候，物理神经就累了，更别说那颗操碎了一地的心了（不是——节操碎了一地）。逃避、切断联系，便是最好的自我解放。刘瑜写过像一个星球一般的孤独，尼采也写过与影子的对谈，还有首老歌大概叫做“寂寞让我如此美丽”。他们都是借着孤独感才能营造自己的空间罢了；而“孤独”本身，并不是主题。所以，一个人的世界里，满是幸福。因为你可以进退自如。</p><p>为什么这样的幸福感又很不要脸呢？因为你可以进退自如。衣食足、仓廪实，什么样的情绪不是无病呻吟呢？还能思考是否孤独的问题，这表示脑细胞未死完、体力没透支、身体无疼痛。至少在拎起孤独这个东西的时间里，没有要去忧虑的生计，也没有值得悲伤或痛哭的变故，甚至都没旁的悲惨世界来分这颗孤独的心。这样孤独着，是没有去挤一号线，也还不是吃不起庆丰包子（虽然眼下吃不到），呼吸还算顺畅，并没有堵在半路并夹在满满一公交车的羽绒服中间。有孤独的资本，就已经很不要脸了，不是吗？无论身在何方，大家都只是要活着，要活着。若是还能腆着一脸的孤独，待到明年春花开，便已是莫大的福气了。</p><p>于是，我去跑步。 黑夜、细雨、森林，一个人跑步。</p><p>生活就复杂不起来了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;冬日里的鲁汶在傍晚时分就已经黑黢黢的，砖红的小城一股脑儿得都罩在昏黄的路灯中。淅淅沥沥，还下点儿下雨。今年是个暖冬，可比台北舒服些。听说台北那股子冰冷，冬季还是到鲁汶来看雨吧。我总是小心翼翼地爱着鲁汶的雨。这里的雨很随性，随来随往。（似乎只有两小时内的天气预报才能说得稍微准
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>是谁曾撩拨过你的心弦</title>
    <link href="http://blog.beendless.com/2014/01/11/%E6%98%AF%E8%B0%81%E6%9B%BE%E6%92%A9%E6%8B%A8%E8%BF%87%E4%BD%A0%E7%9A%84%E5%BF%83%E5%BC%A6/"/>
    <id>http://blog.beendless.com/2014/01/11/是谁曾撩拨过你的心弦/</id>
    <published>2014-01-12T02:58:44.000Z</published>
    <updated>2018-12-19T05:14:20.010Z</updated>
    
    <content type="html"><![CDATA[<p>有没有那么一个瞬间，就不知所以地心动了，或是脸红了。有没有那么一条短信或消息，就让你无法自己地分心了。有没有那么些人，来到你的生命里，没有预约。然而终究，都还是转身走开了。在故事的最后，你也不知道那个人的离开有没有回头的画面；因为，你既没有后视镜，也没有勇气让自己回一回头。似乎所有的爱情、关系，如果没能成就锅碗瓢盆和细水长流，就都有那么一丝的凄婉，不管谁对谁错。开头的时候，辩解和争论更少些，情境也更有趣些。 </p><p>故事的开端总是可以五花八门，譬如同学同事同班同行或同一个聚会、同一个吧台，譬如朋友介绍，再譬如一次凶猛无计划的冲撞。这些，都叫做“遇见”，其实也便是心动那一刻。没有时空的交叠，没有当时那个场景，所有的故事就都无法展开。即使努力想要冲破传统模式的爱情故事，“向左走向右走”也无非是尝试了一个“只遇却不见”的脚本。可这种叙述方式的唯一成功之处，也正是因为它处处暗指遇见的可能性，又处处压抑着。使得那样的遇见不可获得。说到底，还不是为了要跟那个人遇见，要跟他/她心动。 </p><p>你和那个你的他/她，也遇见过吧？后来，你们也尝试过、开心过，或者也吵闹过、分开过，甚至形同陌路过吧。如果回头来看，当时的遇见，好吗？约会可以安排、相亲可以筹谋，可是心动的一刻确实无论如何也计划不来，甚至都来不及准备。</p><p>那一刻，他/她杀得你措手不及，又无处可躲。好像要全身心地去应对来自四面八方的各种独门武器，明着也暗着；却招招败下阵来，遍体鳞伤。这伤倒不是那么痛，至少痛得可以忍，忍起来还有些麻酥酥、酸溜溜的，或者甜蜜蜜的感觉。好几个回合下来你已彻底招架不住，眼神涣散也糊里糊涂地犯晕。直到某天毒法，痛感钻心。你才能第一次意识到，喔，那不过是一种容易上瘾的毒药，也是定时炸弹罢了。 </p><p>那一刻，他/她只要轻轻地动个手指头——食指吧，或者是最使不上劲儿的无名指，你那本来就不怎么多的几根心弦，便全体狂躁不安了。一会儿G大调，一会儿E小调的，有时候延长音，有时候都慌乱地弹不出一个最基本的三指和弦。从未练习过，你却能从谱曲到奏出都在那一刹那完成。无论在他人看来是多么聒噪和难以入耳，而你却欢欣雀跃得好像全世界都可以跟着你的节奏起舞。直到某天，弦断了。或是因为对方下手太狠，或者只是自己绷得太紧，就那么生生的，断了。你才会懂得，喔，心弦如琴弦，总还是要护理、要维修的。 </p><p>经年过后，偶尔忆起，你还能记得是谁曾撩拨过你的心弦吗？那个时刻、那个场景，都还好吗？或许，是他还是她，也都不那么重要了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有没有那么一个瞬间，就不知所以地心动了，或是脸红了。有没有那么一条短信或消息，就让你无法自己地分心了。有没有那么些人，来到你的生命里，没有预约。然而终究，都还是转身走开了。在故事的最后，你也不知道那个人的离开有没有回头的画面；因为，你既没有后视镜，也没有勇气让自己回一回头。
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>跨年2013–2014</title>
    <link href="http://blog.beendless.com/2013/12/30/%E8%B7%A8%E5%B9%B42013%E2%80%932014/"/>
    <id>http://blog.beendless.com/2013/12/30/跨年2013–2014/</id>
    <published>2013-12-30T15:08:34.000Z</published>
    <updated>2018-12-19T05:05:25.389Z</updated>
    
    <content type="html"><![CDATA[<p>写“年终总结”似乎已经成了这个时代辞旧迎新的仪式，或者也可以称作习俗。对我而言，这也曾是个人习惯。不知道从什么时候我开始意识到这个习惯，也意识到很多人有这样的习惯。生日、大的纪念日、新年伊始。然而，就从上个星期到此刻，我心里有个犟到死的小人儿一直在咆哮：“今年不许写总结，不许发任何新年祝福给任何人，不许做任何与旧年新年相关的事情，甚至不要去想这样的话题！逃开逃开逃开，像逃开污染源或传染病一样！”如此病态心理其实是一种对自己的挑衅和批驳，对自己生活的不满和不愿承认，对明天的不敢面对。首先不知不觉得形成某种习惯、进入某种潮流，其实是形成了自己，形成了某个群体的一部分。然后再以挣扎和撕扯的方式，表达另一个自我的存在。任何的快乐、痛苦，或者说任何的情绪和感受，都是要消耗体力的。我再是情绪化，也有无力情绪化的时候。于是，让一场出师无名的、与自我的战争，以中场的方式暂停。 </p><p>之所以从上个星期就开始有挣扎，是因为从那时我已进入“假期免打扰模式”。大学有圣诞和新年连在一起的假期，算是一点儿都不寒冷的寒假吧——长达两个星期，却一点儿都没有冰冻的干脆。全校的学生放假；但教学、研究、行政都只有正常的三五个并不特别连续的公共假期，当然也可以请年假让它们连在一起；不同的图书馆还都有各自的放假安排和时间表。这样参参差差，却让我的办公室整个楼里都没什么人气儿了。而我自己呢，拖着个答应在2013年底发出的稿子还没修改，也耽着一两个考试在一月，心里还揣着好几个手忙脚乱的题目和那些能数完但没读完的书。以此来充斥这个半有半无的假期，当然是不够的；最重要的还是靠懒散和无敌宅，假期才能叫做假期。 </p><p>在家里闷了三四天的时候，有些狂躁，满心悔恨为什么当时不够任性。（本计划一路北上看望个北极圈边儿的朋友，但那哥们有泡妞大业壮志未酬，我便决定以不骚扰的方式默默支持。XD）可是过了那个劲儿，日子却过得出乎意料的安然。自己做点家务也看书写字，下个厨房也改改论文。倒是很开心，很愿意享受这样的时光。于是，原本跟自己死磕的无厘头也被抚平，没有狂躁，”年终总结”也卷土重来了。当你最不花力气的时候，便是最舒适，但最无掌控的时候——一些所谓的自然的、习惯了的东西便占据你、指使你。或者说，你就这样被年终总结给写了。 </p><p>废话连篇，难道才要进入2013年终总结的内容么？也并不完全是。惯常的、与自己的战斗和间歇性的安然平静，就是我全部的2013年。没什么变化，也都在变化着。一个人在象牙塔里，而且在一个坐落于村里的象牙塔的生活，就是这样的。也有孤单寂寞，但并不多时，也并不难耐；有那么一些个为研究方向和想法而血压升高的时候，非常零星；还有灰心丧气，深感浪费青春、智商线下，还觉得自己完全不是这块料的时候，反反复复那么几次；看着自己读过的书和写过的字，一边觉得真该拍手叫好，也一边觉得它们与垃圾无异。网上曾疯传的一篇米国某大学人文学科博士生的yardlife，励志型的，也在某个时刻让我欣喜激动过；而那终究是学霸们的生活，或者甚至是学霸们自己幻想出来的生活，与我太不真实。幸也悲也，我没法变成学霸。我也不是那样可以长期保持规律且急速的人。我更愿意在自己的战场上，有厮杀的痛快淋漓，也有与之相伴的安静祥和。有人说过我太极端。然而调和无用，我便也接受了。极端了才看得更清楚，也没什么不好。 </p><p>若要悉数，那2013年：每学期都认真上2门课+考试，混1-2门课+不重要的考试，不清不楚地囫囵外语<em>门，读书</em>本、文章<em>篇，笔记至少266条+</em>坨，写论文1篇，暂定研究方向，发出电子邮件至少563封，一星期长度的暑期班+旅行共2次，短途自己放风5-6次，写日记29篇（从数量看应该叫双周记），未完成的心愿和计划N个…… </p><p>看着旧的，其实也等于看到了新的，那2014年：每学期认真上1-2门课+考试，不混课，继续囫囵外语*门，读书？本、文章？篇，论文？篇，回国探亲1次（4月），旅行2次，短途放风？次，未完成的心愿和计划必然还有N个…… </p><p>似乎还是话很多的样子。想到小时候最爱看电视剧，包大人那主题曲叫什么《新鸳鸯蝴蝶梦》的——抽刀断水水更流，借酒消愁愁更愁……由来只闻新人笑，有谁听到旧人哭。真不懂这歌要唱个什么，跟黑炭包大人有什么关系。倒是适合做年终总结。譬如流水就是时间，捏不住更留不住，也不会因为你的一厢情愿做任何的回头或停歇；反而，你越是迷恋，就约是淹死在时间的漩涡里。过去的往事和时光，就都让他过去，怀不怀念，他都在哪里，死了或者没死；而对未来的自己和生活，让我们都抱着最美好的希望，让我们一起去迎接2014的笑声吧。 </p><p>大家跨年的时候就都撒开了的吼，吼到再也听不见泪水，只看的到笑声。祝大家新年快乐！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写“年终总结”似乎已经成了这个时代辞旧迎新的仪式，或者也可以称作习俗。对我而言，这也曾是个人习惯。不知道从什么时候我开始意识到这个习惯，也意识到很多人有这样的习惯。生日、大的纪念日、新年伊始。然而，就从上个星期到此刻，我心里有个犟到死的小人儿一直在咆哮：“今年不许写总结，不
      
    
    </summary>
    
      <category term="行走的樹苗" scheme="http://blog.beendless.com/categories/%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%A8%B9%E8%8B%97/"/>
    
    
  </entry>
  
  <entry>
    <title>Merry Christmas and Happy New Year</title>
    <link href="http://blog.beendless.com/2013/12/20/Merry%20Christmas%20and%20Happy%20New%20Year/"/>
    <id>http://blog.beendless.com/2013/12/20/Merry Christmas and Happy New Year/</id>
    <published>2013-12-21T05:08:40.000Z</published>
    <updated>2018-12-19T04:37:40.409Z</updated>
    
    <content type="html"><![CDATA[<p>很快，又到了年末。聖誕加新年，學校學生放假，系裡秘書離職，老闆外出講學，同事去中國探親旅行，室友回家或遊玩。我，什麼都沒有計劃，似乎也好像是都被計劃好了一樣。就這樣留在家裡、留在學校、留在辦公室，留在我本來的生活當中。</p><p>並沒有什麼悲傷或者孤單；如果說有，也完全不是因為沒有回國、沒有旅行。真的，只是沒有那個應該在自己身邊的人在身邊而已。</p><p>於是，我想要收拾心情，收拾節日的氛圍，專注在自己本來的生活當中比較好。然而，我本來的生活，也無非就這樣了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很快，又到了年末。聖誕加新年，學校學生放假，系裡秘書離職，老闆外出講學，同事去中國探親旅行，室友回家或遊玩。我，什麼都沒有計劃，似乎也好像是都被計劃好了一樣。就這樣留在家裡、留在學校、留在辦公室，留在我本來的生活當中。&lt;/p&gt;
&lt;p&gt;並沒有什麼悲傷或者孤單；如果說有，也完全
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>深呼吸</title>
    <link href="http://blog.beendless.com/2013/12/20/%E6%B7%B1%E5%91%BC%E5%90%B8/"/>
    <id>http://blog.beendless.com/2013/12/20/深呼吸/</id>
    <published>2013-12-21T04:59:12.000Z</published>
    <updated>2018-12-19T05:11:00.773Z</updated>
    
    <content type="html"><![CDATA[<p>寒冷冬日，北风吹。——真正符合字面意义的北风，它来自北极，且强劲到使得斯堪的纳维亚的人们交通瘫痪，飞机无法迫降。还好，我也只是骑车的时候感受到大风吹得自己要侧倒。其他都还好。</p><p>星期五的下午，灰暗和周末。——也是一个真的结束，神学系的国际会议结束了，我的第一篇习作的草稿也结束了。还好，发给那个约稿的教授，也算是意味着发给了编委会。所以，也都还好。</p><p>工作进入到一个再次收拾零碎材料和整装待发的阶段。似乎，每每都会要经历这样的阶段，俗话说的承上启下吧。然而，这也是本来就修炼得不够火候的我最掌握不好的阶段。会涣散，会凌乱，会无法集中，会不知所措。会低效甚至无效，会一副无所事事的死样子。于是，下午听完了别人的会议，也跑去邮局做点儿本来是邮差该做但没做好的事情。也顺道在店里买了些新年礼物准备着。逛街和购物于我而言已经成为一种负担，于是能在偶然的外出路上做完，算是好运了。</p><p>还不到下午五点，天已擦黑，广场上的圣诞集市也在叮叮当当搭起来了。我看见的只是广场边就抬头可见的残月，那月牙儿细得真让人看着，细！ 但我没有回家，还是黑洞洞地在冷风里回到办公室，打上一杯冰凉的水，坐下来。放下准备给亲人朋友的礼物，也打开从邮局取来的给自己的礼物。或许是不久前才发现的，购物已经不能给我任何快乐，最多是花费时间和力气罢了。于是，我还是不知道要做什么。静静的，插上耳机。原来这是周五的晚上，一个似乎从名义上应该是去跟朋友家人去餐厅吃饭、酒吧笑开怀的时刻。无论多冷的风或多黑的夜，都可以在热烈的温度中度过。想到这些的时候我才明白，原来，自己这是孤单了。</p><p>近来专心工作的我，已经满口没心没肺，不知用多大的声音宣称自己的忙碌、工作和学习的难度、一个人的潇洒和自由、没有羁绊和没有社交负担。我是用了多大的力气去打造一个刀枪不入的自己，那些力气都在这一刻回头将刀枪都入不了的自己击碎。</p><p>深呼吸，也就是这一刻。</p><p>眼瞅着朋友发短信给我，说周日晚上去他家吃饭。也瞅着facebook上面有人嚷嚷找我，说来根特开会却没订到酒店，要给我打电话。同事大哥还说，周六晚上去布鲁塞尔或周日去布鲁日，欢迎我加入。听起来是不是又很忙碌？</p><p>就这一刻，只是一件深呼吸的事罢了。   2.13.12.6</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;寒冷冬日，北风吹。——真正符合字面意义的北风，它来自北极，且强劲到使得斯堪的纳维亚的人们交通瘫痪，飞机无法迫降。还好，我也只是骑车的时候感受到大风吹得自己要侧倒。其他都还好。&lt;/p&gt;
&lt;p&gt;星期五的下午，灰暗和周末。——也是一个真的结束，神学系的国际会议结束了，我的第一篇习
      
    
    </summary>
    
      <category term="行走的樹苗" scheme="http://blog.beendless.com/categories/%E8%A1%8C%E8%B5%B0%E7%9A%84%E6%A8%B9%E8%8B%97/"/>
    
    
  </entry>
  
  <entry>
    <title>寫作是一件需要堅持的事情</title>
    <link href="http://blog.beendless.com/2013/11/15/%E5%AF%AB%E4%BD%9C%E6%98%AF%E4%B8%80%E4%BB%B6%E9%9C%80%E8%A6%81%E5%A0%85%E6%8C%81%E7%9A%84%E4%BA%8B%E6%83%85/"/>
    <id>http://blog.beendless.com/2013/11/15/寫作是一件需要堅持的事情/</id>
    <published>2013-11-15T16:22:45.000Z</published>
    <updated>2018-12-19T04:14:37.153Z</updated>
    
    <content type="html"><![CDATA[<p>有一些不得不說的話，也是一些不能隨便貼到網絡上讓人家去指指點點的話──比如，我想讓自己練習和堅持寫作，包括中文和英文。</p><p>本來在SJZJ這篇論文的完整草稿沒寫完之前，因為魂斷藍橋的電影，因為今晚騎車被警察攔下修車燈的巧合，因為疲累和完成草稿的小小興奮，我好想寫點東西。甚至，腹稿都打了好幾遍。然而，最終提不起來的是精神、是勇氣。</p><p>我覺得自己寫的不好，所以急於示人卻又不敢示人。我覺得自己的想法很好，所以想要示人卻更不敢示人。於是不知道怎麼的，話題逐漸轉到曾經早被放棄的一件事情上來，也就是寫作。</p><p>開了博客，就是為了督促自己去寫作的。誰知，每年付著服務器的錢，也付著語法修改的錢，但其實什麼都沒做。好多個月了，再一次想起，曾經有這樣一個算是夢想的東西，更應該是習以為常的學習和訓練的東西。</p><p>不知道這次能堅持多久，至少在為下篇文章的初稿之前，請堅持這件事情： 閱讀&gt;&gt;&gt;寫作 （中文＋English）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有一些不得不說的話，也是一些不能隨便貼到網絡上讓人家去指指點點的話──比如，我想讓自己練習和堅持寫作，包括中文和英文。&lt;/p&gt;
&lt;p&gt;本來在SJZJ這篇論文的完整草稿沒寫完之前，因為魂斷藍橋的電影，因為今晚騎車被警察攔下修車燈的巧合，因為疲累和完成草稿的小小興奮，我好想寫點
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>黑暗中迎接夕阳</title>
    <link href="http://blog.beendless.com/2013/11/15/%E9%BB%91%E6%9A%97%E4%B8%AD%E8%BF%8E%E6%8E%A5%E5%A4%95%E9%98%B3/"/>
    <id>http://blog.beendless.com/2013/11/15/黑暗中迎接夕阳/</id>
    <published>2013-11-15T14:39:56.000Z</published>
    <updated>2018-12-19T04:51:21.480Z</updated>
    
    <content type="html"><![CDATA[<p>黑暗中迎接夕阳，这样的经历于我还是第一次。今天周末，国内长假中，比国和鲁村继续安静中。而我，拉着窗帘关了自己在屋里一整天，什么也没有做，直到下午四点。所以才有了如此难得的机会——打开窗帘后，洒进来的，是夕阳。莫名地感受到夕阳的温柔和美丽，不张扬、不喧嚣。它不明媚，所以并不是活泼或愉悦的；它也不沉默，所以并不是阴郁或痛苦的。淡淡的忧伤和浅浅的微笑，这才是我此刻看到的夕阳。</p><p>想来，认认真真去看夕阳大概记得的只有两次。一次是好几年前在香港，去大埔骑车。但因海边天气多变，夕阳没看多少，倒是捡了海星，也淋了一场极欢快的大雨。再一次就是今年八月份，在海德堡那个有座城堡的山上。跟着朋友去散步的，却无意中碰到夕阳西下。记得当时我只趴在那不知多少年的砖石上面，看夕阳与周边的云霞在红色、赭色、黄色、紫色之间渐变。我告诉他们，似乎自己从未想过看夕阳，更未想过它会那么美。不知是这情境的渲染还是真的投了缘分，从那天起，我多了两个好朋友。</p><p>今天傍晚的一瞥，也是偶然。我的房间是下午背阳的，平日在这里只觉得有些冷意，从未想过会有阳光像此刻一般洒进来。很突然，就泼进来一下子。一下子，就过去了。每天我都可以看到对面的监狱，他们甚至可以享受到比我更多的阳光。（因为我的办公室也是背阳的。）倒也奇怪，今天他们也很安静，不像平时还出来打球活动。我有去参观过里面的陈设和他们的生活，也经常听得到他们唱歌、骂人、打球，甚至狂欢。我看得到他们夜晚的灯光，或许如同他们看得到我透着光的窗帘一样。然而，周末呢？或许有家属亲眷会去探望，所以也没了这些吵闹吧。于是，我今天的黑暗来得更轻松，都没有任何打扰。关了手机，拉上窗帘，世界就可以这样小。</p><p>这些日子的生活，简单也开心。新来的室友们可爱贴心，其中有一个很漂亮的德国小妹。刚开始她显得羞羞的，不太说话，才一个星期，她已经可以在晚上十二点直接冲上我的房间，敲门问我：“我刚回家，只是来看看你，是不是还活着！”她真的像一种港式的糖水，很甜美的样子。因为她知道我最近的挣扎，也知道我这个星期的工作，所以特来问候的。除了新室友，跟同事们也都很好。我们更多地了解彼此、帮助彼此，还成立了非官方的自助组织。就像戒酒小组那样，我们每个星期扑在一起说自己要死在研究中的心情，然后找到各种理由去餐馆胡吃海喝。最有趣的还不是我们居然堂而皇之地开始了这样的活动，而是，我老板允许且支持我们这样的活动！另外，这学期开始在哲学系上课，非常喜欢。“鲁大”文科类在传统上是以神学和哲学闻名的，得以去年混神学系和法典（canon law），今年混哲学系，是我捡了大便宜。或许是新鲜感，也或许是再一次的缘分，真是好喜欢哲学系的课。继续往前走才知道的吧。</p><p>我自己呢？有黑暗，也有夕阳。曾说过“没有再见”这句话，想来，多么心痛的一句话。每天每天，每次每次，原来“想念”和“再见”实在没什么必然的逻辑关系。惟愿黑暗中，仍有夕阳。它不张扬、不喧嚣，有淡淡的忧伤和浅浅的微笑。 桌上扔着一封保险公司寄给我的信，刚打开一看，是补交25块钱，理由是：亲爱的CYR小姐，从这个月开始您就26岁了，所以每年需要交……。好意外却又逃不掉的通知……</p><p>有朋友叫去吃饭，再不走，就得挨数落了。快闪~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;黑暗中迎接夕阳，这样的经历于我还是第一次。今天周末，国内长假中，比国和鲁村继续安静中。而我，拉着窗帘关了自己在屋里一整天，什么也没有做，直到下午四点。所以才有了如此难得的机会——打开窗帘后，洒进来的，是夕阳。莫名地感受到夕阳的温柔和美丽，不张扬、不喧嚣。它不明媚，所以并不是
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>流水账一年记 （二二更健康）</title>
    <link href="http://blog.beendless.com/2013/11/15/%E6%B5%81%E6%B0%B4%E8%B4%A6%E4%B8%80%E5%B9%B4%E8%AE%B0%20%EF%BC%88%E4%BA%8C%E4%BA%8C%E6%9B%B4%E5%81%A5%E5%BA%B7%EF%BC%89/"/>
    <id>http://blog.beendless.com/2013/11/15/流水账一年记 （二二更健康）/</id>
    <published>2013-11-15T14:39:00.000Z</published>
    <updated>2018-12-19T05:13:26.098Z</updated>
    
    <content type="html"><![CDATA[<p>之前也絮絮叨叨且各种矫情地说了很多自己的生活。近日过得太是开心得不知天高地厚，突然发现，已近一年。 </p><p>从初来乍到的兴奋到后来的孤独和不安，从学习工作压力的各种形式主义抓狂到鼻涕一把泪一把地习惯下来——这一年的我过得平平淡淡。或者换句话说，没有那么开心。直到最近的半个月。 </p><p>宅在家中直面监狱的我，这个月一开始就跑去了海德堡。有人说这是海德堡的“情缘”。虽然我骂人家好酸啊，但依然无比珍视跟这群人的相识、一起看日落、一起走哲学家小道、一起在沿河的路边嬉笑打骂。似乎，好久，都没有过。还未离开海德堡，亲爱的xixi就从罗马飞来，带着一箱子从香港和台湾一起运来的思念。如此的相见已经计划了大半年、期待了大半年；然而一起却只能有短短两天半。分分秒秒，如何不是我最开心的时光。有朋自远方来，定是欢乐不少，后来也有朋友从法国来旅行。</p><p>短短十多天，我是听了多少“不要把自己关在监狱里”这类的谆谆教诲！即使离开了，还一个个叮嘱，让我多出去放风啊……好吧，我答应你们也答应自己，你们走了，但不带走这些天的快乐。</p><p>我会多出去放风的！！！ </p><p>昨晚定了布鲁塞尔的酒店，解决了赶飞机难题，9月初去威尼斯。期待水城给自己一个完美的周年结尾。明年，更好~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前也絮絮叨叨且各种矫情地说了很多自己的生活。近日过得太是开心得不知天高地厚，突然发现，已近一年。 &lt;/p&gt;
&lt;p&gt;从初来乍到的兴奋到后来的孤独和不安，从学习工作压力的各种形式主义抓狂到鼻涕一把泪一把地习惯下来——这一年的我过得平平淡淡。或者换句话说，没有那么开心。直到最近
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>触底反弹</title>
    <link href="http://blog.beendless.com/2013/11/15/%E8%A7%A6%E5%BA%95%E5%8F%8D%E5%BC%B9/"/>
    <id>http://blog.beendless.com/2013/11/15/触底反弹/</id>
    <published>2013-11-15T14:38:20.000Z</published>
    <updated>2018-12-19T05:08:34.916Z</updated>
    
    <content type="html"><![CDATA[<p>或许与荷尔蒙没什么关系，因为它们已经被扔在健身房了。但总还是反反复复地，再次完成近两个星期的忧郁时间。总在有意无意地克制自己，放不开嚣张也放不开坚强。这样看似矫情地在情绪低谷写日志，自己也是嗤之以鼻；但想想却有合情合理的地方。把酒言欢的时候，全身心地投入的时候，或者累得睁不开眼的时候，又不是要卖字为生，能有哪门子的心思或者动力来写点无聊的字？只有在这样——仲夏黑夜，沉默累积，独自一人又无处宣泄的时候。如此的矫情都有了得以存在的理由。如此，我便真是无聊到一定程度了。 </p><p>实在点儿说，工作，就是灵魂的另一半，无论我们是否愿意承认。每天的所有时间里，除了吃睡等维持基本生理机能的活动外，我们把一半以上都交给了工作。于是，工作于我们自身或许比恋人来得更实在一些，因为它真的是不离不弃。除非某天我们被解雇了且长期待业。那样的感觉，或许比长期单身更让人抓狂吧。即使号称家庭主妇这个行业，每天也有花花草草洗衣做饭或者打牌购物这种工作来做，不是么？很早很早，我就有想过自己喜欢做什么样的工作，也尝试了。播音？记者？旅游？教师？然而，每当我把爱好变成一份兼职工作的时候，某种毫不愿意负责的挣扎感便浮出水面。否则，我或许几年前会尝试其他的路去走。从未想过或爱过读那么多书、做那么难的研究，然而却不知不觉上了贼船；甚至在最痛苦难过的时候，依然会觉得它很实在，它给我自由，它具备挑战，它还可以“魔幻现实主义”（自从莫言之后这个词好火……）。走着走着，便到了选题目，也就是找对象的时候。一路迷茫，竟然也磨磨唧唧地找到了一个。它绝不是高富帅，然而却可能具有奥特曼的潜质。在高难度挑战面前，默默了好久。踟蹰，畏惧，止步不前。再加上一些无病呻吟的“孤独感”、不社交的习惯，和闷热的室内高温，还有隐隐地藏在最深处的思乡病，我再一次触底。 </p><p>下周末要去海德堡呆一个星期，同事说我怎么一点都不期待不开心呢？对啊，那么美的古老学校，那么有趣的讨论题目，那么多新面孔，我怎么一点都不期待不开心呢？反而多有焦虑和自卑，怕丢脸丢在外面。那，那，那，是不是该反弹一下？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;或许与荷尔蒙没什么关系，因为它们已经被扔在健身房了。但总还是反反复复地，再次完成近两个星期的忧郁时间。总在有意无意地克制自己，放不开嚣张也放不开坚强。这样看似矫情地在情绪低谷写日志，自己也是嗤之以鼻；但想想却有合情合理的地方。把酒言欢的时候，全身心地投入的时候，或者累得睁不
      
    
    </summary>
    
      <category term="漲潮﹣退潮" scheme="http://blog.beendless.com/categories/%E6%BC%B2%E6%BD%AE%EF%B9%A3%E9%80%80%E6%BD%AE/"/>
    
    
  </entry>
  
</feed>
